"use strict";(self.webpackChunkxtd=self.webpackChunkxtd||[]).push([[6931],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var i=t(67294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,i,s=function(e,n){if(null==e)return{};var t,i,s={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var c=i.createContext({}),l=function(e){var n=i.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=l(e.components);return i.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},p=i.forwardRef((function(e,n){var t=e.components,s=e.mdxType,r=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=l(t),m=s,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||r;return t?i.createElement(f,a(a({ref:n},u),{},{components:t})):i.createElement(f,a({ref:n},u))}));function m(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var r=t.length,a=new Array(r);a[0]=p;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:s,a[1]=o;for(var l=2;l<r;l++)a[l]=t[l];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}p.displayName="MDXCreateElement"},84461:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var i=t(87462),s=(t(67294),t(3905));const r={},a="Choosing Between Class and Struct",o={unversionedId:"documentation/Design Guidelines/Type Design Guidelines/choosing_between_class_and_struct",id:"documentation/Design Guidelines/Type Design Guidelines/choosing_between_class_and_struct",title:"Choosing Between Class and Struct",description:"One of the basic design decisions every framework designer faces is whether to design a type as a class or as a struct. Good understanding of the differences in the behavior of reference types and value types is crucial in making this choice.",source:"@site/docs/documentation/Design Guidelines/Type Design Guidelines/choosing_between_class_and_struct.md",sourceDirName:"documentation/Design Guidelines/Type Design Guidelines",slug:"/documentation/Design Guidelines/Type Design Guidelines/choosing_between_class_and_struct",permalink:"/xtd/docs/documentation/Design Guidelines/Type Design Guidelines/choosing_between_class_and_struct",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Abstract Class Design",permalink:"/xtd/docs/documentation/Design Guidelines/Type Design Guidelines/abstract_class_design"},next:{title:"Enum Design",permalink:"/xtd/docs/documentation/Design Guidelines/Type Design Guidelines/enum_design"}},c={},l=[],u={toc:l};function d(e){let{components:n,...t}=e;return(0,s.kt)("wrapper",(0,i.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"choosing-between-class-and-struct"},"Choosing Between Class and Struct"),(0,s.kt)("p",null,"One of the basic design decisions every framework designer faces is whether to design a type as a class or as a struct. Good understanding of the differences in the behavior of reference types and value types is crucial in making this choice."),(0,s.kt)("p",null,"The only difference between a class and a struct in C++ is that structs have default public members and bases and classes have default private members and bases. Both classes and structs can have a mixture of public and private members, can use inheritance, and can have member functions."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"\u2714\ufe0f CONSIDER")," defining a struct instead of a class if instances of the type are small and commonly short-lived or are commonly embedded in other objects."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"\u274c AVOID")," defining a struct unless the type has all of the following characteristics:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"It logically represents a single value, similar to primitive types (int, double, etc.)."),(0,s.kt)("li",{parentName:"ul"},"It is immutable.")),(0,s.kt)("p",null,"In all other cases, you should define your types as classes."),(0,s.kt)("h1",{id:"see-also"},"See also"),(0,s.kt)("p",null,"\u200b"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/documentation/Design%20Guidelines/Type%20Design%20Guidelines"},"Type Design Guidelines")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/documentation/Design%20Guidelines"},"Design Guidelines")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/documentation"},"Documentation"))))}d.isMDXComponent=!0}}]);