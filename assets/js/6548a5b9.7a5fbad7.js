"use strict";(self.webpackChunkxtd=self.webpackChunkxtd||[]).push([[1834],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=d(n),u=i,f=c["".concat(s,".").concat(u)]||c[u]||m[u]||r;return n?a.createElement(f,o(o({ref:t},p),{},{components:n})):a.createElement(f,o({ref:t},p))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var d=2;d<r;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},90088:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var a=n(87462),i=(n(67294),n(3905));const r={},o="How to: Write Text to a File",l={unversionedId:"documentation/Guides/xtd.core/Common I:O tasks/How-tos/write_text_to_a_file",id:"documentation/Guides/xtd.core/Common I:O tasks/How-tos/write_text_to_a_file",title:"How to: Write Text to a File",description:"This topic shows different ways to write text to a file for a xtd app.",source:"@site/docs/documentation/Guides/xtd.core/Common I:O tasks/How-tos/write_text_to_a_file.md",sourceDirName:"documentation/Guides/xtd.core/Common I:O tasks/How-tos",slug:"/documentation/Guides/xtd.core/Common I:O tasks/How-tos/write_text_to_a_file",permalink:"/xtd/docs/documentation/Guides/xtd.core/Common I:O tasks/How-tos/write_text_to_a_file",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"How to: Read Text from a File",permalink:"/xtd/docs/documentation/Guides/xtd.core/Common I:O tasks/How-tos/read_text_from_a_file"},next:{title:"File and stream I/O",permalink:"/xtd/docs/documentation/Guides/xtd.core/Common I:O tasks/file_and_stream_io"}},s={},d=[{value:"Notes",id:"notes",level:2},{value:"Example: Write text with stream_writer",id:"example-write-text-with-stream_writer",level:2},{value:"Example: Append text with stream_writer",id:"example-append-text-with-stream_writer",level:2},{value:"Example: Write and append text with the file class",id:"example-write-and-append-text-with-the-file-class",level:2},{value:"See also",id:"see-also",level:2}],p={toc:d};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"how-to-write-text-to-a-file"},"How to: Write Text to a File"),(0,i.kt)("p",null,"This topic shows different ways to write text to a file for a xtd app."),(0,i.kt)("p",null,"The following classes and methods are typically used to write text to a file:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1io_1_1stream__writer.html"},"xtd::io::stream_writer")," contains methods to write to a file (write and write_line)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1io_1_1file.html"},"xtd::io::file")," provides static methods to write text to a file, such as write_all_lines and write_all_text, or to append text to a file, such as append_all_jines, append_all_text, and append_text."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1io_1_1path.html"},"xtd::io::path")," is for strings that have file or directory path information. It contains the combine method and, the join and try_join methods, which allow concatenation of strings to build a file or directory path.")),(0,i.kt)("h2",{id:"notes"},"Notes"),(0,i.kt)("p",null,"The following examples show only the minimum amount of code needed. A real-world app usually provides more robust error checking and exception handling."),(0,i.kt)("h2",{id:"example-write-text-with-stream_writer"},"Example: Write text with stream_writer"),(0,i.kt)("p",null,"The following example shows how to use the ",(0,i.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1io_1_1stream__writer.html"},"xtd::io::stream_writer")," class to write text to a new file one line at a time. Because the ",(0,i.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1io_1_1stream__writer.html"},"xtd::io::stream_writer")," object is declared and instantiated in a using statement, the destructor automatically flushes and closes the stream."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <xtd/xtd>\n\nusing namespace xtd;\nusing namespace xtd::io;\n\nclass program {\npublic:\n  static auto main() {\n    // Create a string array with the lines of text\n    std::vector<string> lines = {"First line", "Second line", "Third line"};\n    \n    // Set a variable to the Documents path.\n    string doc_path = environment::get_folder_path(environment::special_folder::my_documents);\n    \n    // Write the string array to a new file named "write_lines.txt".\n    using_ (stream_writer output_file(path::combine(doc_path, "write_lines.txt"))) {\n      for (const string& line : lines)\n        output_file.write_line(line);\n    }\n  }\n};\n\nstartup_(program::main);\n\n// The example creates a file named "write_lines.txt" with the following contents:\n// First line\n// Second line\n// Third line\n')),(0,i.kt)("h2",{id:"example-append-text-with-stream_writer"},"Example: Append text with stream_writer"),(0,i.kt)("p",null,"The following example shows how to use the xtd::io::stream_writer class to append text to the text file created in the first example."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <xtd/xtd>\n\nusing namespace xtd;\nusing namespace xtd::io;\n\nclass program {\npublic:\n  static auto main() {\n    // Set a variable to the Documents path.\n    string doc_path = environment::get_folder_path(environment::special_folder::my_documents);\n    \n    // Append text to an existing file named "write_lines.txt".\n    using_ (stream_writer output_file(path::combine(doc_path, "write_lines.txt"), true)) {\n      output_file.write_line("Fourth Line");\n    }\n  }\n};\n\nstartup_(program::main);\n\n// The example adds the following line to the contents of "write_lines.txt":\n// Fourth Line\n')),(0,i.kt)("h2",{id:"example-write-and-append-text-with-the-file-class"},"Example: Write and append text with the file class"),(0,i.kt)("p",null,"The following example shows how to write text to a new file and append new lines of text to the same file using the ",(0,i.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1io_1_1file.html"},"xtd::io::file")," class. The ",(0,i.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1io_1_1file.html#a93dd71561fbc7a998bd3d92f6f4cd671"},"xtd::io::file::write_all_text")," and ",(0,i.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1io_1_1file.html#a8dbded14b2a5d0ecf45bd83a727c61aa"},"xtd::io::file::append_all_lines")," methods open and close the file automatically. If the path you provide to the ",(0,i.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1io_1_1file.html#a93dd71561fbc7a998bd3d92f6f4cd671"},"xtd::io::file::write_all_text")," method already exists, the file is overwritten."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <xtd/xtd>\n\nusing namespace xtd;\nusing namespace xtd::io;\n\nclass program {\npublic:\n  static auto main() {\n    // Create a string with a line of text.\n    string text = "First line" + environment::new_line();\n    \n    // Set a variable to the Documents path.\n    string doc_path = environment::get_folder_path(environment::special_folder::my_documents);\n    \n    // Write the text to a new file named "write_file.txt".\n    file::write_all_text(path::combine(doc_path, "write_file.txt"), text);\n    \n    // Create a string array with the additional lines of text\n    std::vector<string> lines = { "New line 1", "New line 2" };\n    \n    // Append new lines of text to the file\n    file::append_all_lines(path::combine(doc_path, "write_file.txt"), lines);\n  }\n};\n\nstartup_(program::main);\n\n// The example creates a file named "write_file.txt" with the contents:\n// First line\n// And then appends the following contents:\n// New line 1\n// New line 2\n')),(0,i.kt)("h2",{id:"see-also"},"See also"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/documentation/Guides/xtd.core/Common%20I%3AO%20tasks"},"Common I/O Tasks")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/documentation/Guides/Overview/Tutorials"},"Tutorials")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/documentation"},"Documentation"))))}m.isMDXComponent=!0}}]);