"use strict";(self.webpackChunkxtd=self.webpackChunkxtd||[]).push([[7138],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),s=c(n),u=o,f=s["".concat(l,".").concat(u)]||s[u]||m[u]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=s;var d={};for(var l in t)hasOwnProperty.call(t,l)&&(d[l]=t[l]);d.originalType=e,d.mdxType="string"==typeof e?e:o,i[1]=d;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},16244:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>d,toc:()=>c});var r=n(87462),o=(n(67294),n(3905));const a={sidebar_position:8},i="Deprecated (**Internal use only**)",d={unversionedId:"documentation/Internal/deprecated",id:"documentation/Internal/deprecated",title:"Deprecated (**Internal use only**)",description:"Do not remove an old method immediately. but :",source:"@site/docs/documentation/Internal/deprecated.md",sourceDirName:"documentation/Internal",slug:"/documentation/Internal/deprecated",permalink:"/xtd/docs/documentation/Internal/deprecated",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Process (**Internal use only**)",permalink:"/xtd/docs/documentation/Internal/process"},next:{title:"Sounds (**Internal use only**)",permalink:"/xtd/docs/documentation/Internal/sounds"}},l={},c=[{value:"How to set method deprecated",id:"how-to-set-method-deprecated",level:2},{value:"For example",id:"for-example",level:2}],p={toc:c};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"deprecated-internal-use-only"},"Deprecated (",(0,o.kt)("strong",{parentName:"h1"},"Internal use only"),")"),(0,o.kt)("p",null,"Do not remove an old method immediately. but :"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Set this method deprecated in N version to N + 1 version of xtd. "),(0,o.kt)("li",{parentName:"ul"},"It will be removed in N + 2 version of xtd.")),(0,o.kt)("h2",{id:"how-to-set-method-deprecated"},"How to set method deprecated"),(0,o.kt)("p",null,"To set a method deprecated add the deprecated attribute before method and add doxygen comment."),(0,o.kt)("h2",{id:"for-example"},"For example"),(0,o.kt)("p",null,"In version 1.2.1 of xtd, we want to remove the ",(0,o.kt)("em",{parentName:"p"},"void xtd::old_function_name(int32_t old_param)")," method."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Version 1.2.1 update code as :")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},'/// @deprecated Replaced by xtd::new_function_name(const xtd::string& new_param) - Will be removed in version 1.2.3\n[[deprecated("Replaced by xtd::new_function_name(xtd::string new_param) - Will be removed in version 1.2.3")]]\nvoid xtd::old_function_name(int32_t old_param) {\n  // ...\n}\n\n/// @bref The new function do something.\n/// @param new_param The new specifie parameter.\nvoid xtd::new_function_name(const std::string& new_param) {\n  // ...\n}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Version 1.2.2 : Do nothing")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Version 1.2.3 remove code as :"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"/// @bref The new function do something.\n/// @param new_param The new specifie parameter.\nvoid xtd::new_function_name(const std::string& new_param) {\n  // ...\n}\n")))}m.isMDXComponent=!0}}]);