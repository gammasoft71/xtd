"use strict";(self.webpackChunkxtd=self.webpackChunkxtd||[]).push([[9739],{3905:(t,e,a)=>{a.d(e,{Zo:()=>p,kt:()=>g});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function d(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function i(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var m=n.createContext({}),s=function(t){var e=n.useContext(m),a=e;return t&&(a="function"==typeof t?t(e):d(d({},e),t)),a},p=function(t){var e=s(t.components);return n.createElement(m.Provider,{value:e},t.children)},o={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,m=t.parentName,p=i(t,["components","mdxType","originalType","parentName"]),u=s(a),g=r,c=u["".concat(m,".").concat(g)]||u[g]||o[g]||l;return a?n.createElement(c,d(d({ref:e},p),{},{components:a})):n.createElement(c,d({ref:e},p))}));function g(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,d=new Array(l);d[0]=u;var i={};for(var m in e)hasOwnProperty.call(e,m)&&(i[m]=e[m]);i.originalType=t,i.mdxType="string"==typeof t?t:r,d[1]=i;for(var s=2;s<l;s++)d[s]=a[s];return n.createElement.apply(null,d)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},47855:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>m,contentTitle:()=>d,default:()=>o,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var n=a(87462),r=(a(67294),a(3905));const l={},d="Types in xtd",i={unversionedId:"documentation/Guides/xtd.core/Types overview/types",id:"documentation/Guides/xtd.core/Types overview/types",title:"Types in xtd",description:"* By design xtd has defined its own types which are only ever aliases to the fixed integer types of c++.",source:"@site/docs/documentation/Guides/xtd.core/Types overview/types.md",sourceDirName:"documentation/Guides/xtd.core/Types overview",slug:"/documentation/Guides/xtd.core/Types overview/types",permalink:"/xtd/docs/documentation/Guides/xtd.core/Types overview/types",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"string",permalink:"/xtd/docs/documentation/Guides/xtd.core/Types overview/string"},next:{title:"Console applications (xtd.core)",permalink:"/xtd/docs/documentation/Guides/xtd.core/console_class"}},m={},s=[{value:"Remarks",id:"remarks",level:2},{value:"Types list",id:"types-list",level:2},{value:"Limits",id:"limits",level:2},{value:"Remarks",id:"remarks-1",level:3},{value:"Boxing",id:"boxing",level:2},{value:"Unboxing",id:"unboxing",level:2}],p={toc:s};function o(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"types-in-xtd"},"Types in xtd"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"By design xtd has defined its own types which are only ever aliases to the ",(0,r.kt)("a",{parentName:"li",href:"https://en.cppreference.com/w/cpp/types/integer"},"fixed integer types of c++"),"."),(0,r.kt)("li",{parentName:"ul"},"You are not obliged to use the xtd types, you are even encouraged to use the standard types or those you want."),(0,r.kt)("li",{parentName:"ul"},"The xtd defines ",(0,r.kt)("inlineCode",{parentName:"li"},"unboxed")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"boxed")," types listed below. The ",(0,r.kt)("inlineCode",{parentName:"li"},"unboxed")," types is same as the native type. The ",(0,r.kt)("inlineCode",{parentName:"li"},"boxed")," type is an ",(0,r.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1box.html"},"xtd::box")," inherited from ",(0,r.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1object.html"},"xtd::object"),".")),(0,r.kt)("h2",{id:"remarks"},"Remarks"),(0,r.kt)("p",null,"For more performance prefere used ",(0,r.kt)("inlineCode",{parentName:"p"},"unboxed")," type. Used ",(0,r.kt)("inlineCode",{parentName:"p"},"boxed")," type when necessary, e.g., to parse, polymorphism, ..."),(0,r.kt)("h2",{id:"types-list"},"Types list"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Unboxed type"),(0,r.kt)("th",{parentName:"tr",align:null},"Boxed type"),(0,r.kt)("th",{parentName:"tr",align:null},"C++11 type"),(0,r.kt)("th",{parentName:"tr",align:null},"\xa0C++ standard type"),(0,r.kt)("th",{parentName:"tr",align:null},"Size in bytes"),(0,r.kt)("th",{parentName:"tr",align:null},"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__types.html#gab7230dbe491f8bcef5e5f8bdaba5e27f"},"xtd::boolean")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#ga020fbeceaf011505de3ac30168375664"},"xtd::boolean_object")),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"Represents a boolean value.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"char"),(0,r.kt)("td",{parentName:"tr",align:null},"\xa0",(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#gaa1de2ea24769d6024df6172bd9355575"},"xtd::char_object")),(0,r.kt)("td",{parentName:"tr",align:null},"char"),(0,r.kt)("td",{parentName:"tr",align:null},"char"),(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"Represents a characters.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__types.html#ga1259090c8918e75847a8cb2a64b8912a"},"xtd::char8")),(0,r.kt)("td",{parentName:"tr",align:null},"\xa0",(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#ga7852d6b3b5f17dbe722a606cd06a1bce"},"xtd::char8_object")),(0,r.kt)("td",{parentName:"tr",align:null},"char8_t"),(0,r.kt)("td",{parentName:"tr",align:null},"char"),(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"Represents a unicode characters.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__types.html#ga39d5c4947c807e5f78b8a9abe3692570"},"xtd::char16")),(0,r.kt)("td",{parentName:"tr",align:null},"\xa0",(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#ga0ff1609eee070b97921316138e506ec9"},"xtd::char16_object")),(0,r.kt)("td",{parentName:"tr",align:null},"char16_t"),(0,r.kt)("td",{parentName:"tr",align:null},"short"),(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"Represents a unicode characters.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__types.html#ga989a1148b6ff15567dca430966b17c92"},"xtd::char32")),(0,r.kt)("td",{parentName:"tr",align:null},"\xa0",(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#ga7f4267b36e2ac25a835ea91593bd0a2d"},"xtd::char32_object")),(0,r.kt)("td",{parentName:"tr",align:null},"char32_t"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"4"),(0,r.kt)("td",{parentName:"tr",align:null},"Represents a unicode characters.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__types.html#ga442d09ba9c8530e03cd30e729738e0fa"},"xtd::wchar")),(0,r.kt)("td",{parentName:"tr",align:null},"\xa0",(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#ga60f9b7c5831e5f533c5f5a6b35e22478"},"xtd::wchar_object")),(0,r.kt)("td",{parentName:"tr",align:null},"wchar_t"),(0,r.kt)("td",{parentName:"tr",align:null},"short - or - int ",(0,r.kt)("em",{parentName:"td"},"(1)")),(0,r.kt)("td",{parentName:"tr",align:null},"2 - or - 4 ",(0,r.kt)("em",{parentName:"td"},"(1)")),(0,r.kt)("td",{parentName:"tr",align:null},"Represents a unicode characters.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__types.html#gabb9d3031d62e3725b4265c7e5d2a98e1"},"xtd::byte")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#ga3fc22386b24ad6ba85daeff85cb79661"},"xtd::byte_object")),(0,r.kt)("td",{parentName:"tr",align:null},"uint_least8_t"),(0,r.kt)("td",{parentName:"tr",align:null},"unsigned char"),(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"Represents a 8-bit unsigned integer.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__types.html#ga09d26135a9af4f7a5f4cae382627d6d1"},"xtd::int16")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#ga9b68e8829910e613dac8a6148477ad7c"},"xtd::int16_object")),(0,r.kt)("td",{parentName:"tr",align:null},"int_least16_t"),(0,r.kt)("td",{parentName:"tr",align:null},"short"),(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"Represents a 16-bit signed integer.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__types.html#ga205462e259a4eca1545511085c2c350e"},"xtd::int32")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#ga4be46d51c646a03427dc92e2bf35cd38"},"xtd::int32_object")),(0,r.kt)("td",{parentName:"tr",align:null},"\xa0int_least32_t"),(0,r.kt)("td",{parentName:"tr",align:null},"int"),(0,r.kt)("td",{parentName:"tr",align:null},"4"),(0,r.kt)("td",{parentName:"tr",align:null},"Represents a 32-bit signed integer.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__types.html#ga2f2888f55e58cac4c07eb490db7868c4"},"xtd::int64")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#ga6186e201158c8307f663ac4d00466b86"},"xtd::int64_object")),(0,r.kt)("td",{parentName:"tr",align:null},"int_least64_t"),(0,r.kt)("td",{parentName:"tr",align:null},"long long."),(0,r.kt)("td",{parentName:"tr",align:null},"8"),(0,r.kt)("td",{parentName:"tr",align:null},"Represents a 64-bit signed integer.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\xa0",(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__types.html#ga9afc9e1ad3e9f8aba95c76280be5e16e"},"xtd::intptr")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#ga9745a7872319ad41c528993da735ad1f"},"xtd::intptr_object")),(0,r.kt)("td",{parentName:"tr",align:null},"intmax_t"),(0,r.kt)("td",{parentName:"tr",align:null},"int",(0,r.kt)("em",{parentName:"td"}," - or - long long")," ",(0,r.kt)("em",{parentName:"td"},"(2)")),(0,r.kt)("td",{parentName:"tr",align:null},"4 - or - 8 ",(0,r.kt)("em",{parentName:"td"},"(2)")),(0,r.kt)("td",{parentName:"tr",align:null},"Represent a pointer or a handle.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__types.html#ga37e983ceedf5a7f73bc4568eaeae0aa2"},"xtd::sbyte")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#gaf42f67c02d59e5180de4a25c387c4ce7"},"xtd::sbyte_object")),(0,r.kt)("td",{parentName:"tr",align:null},"int_least8_t"),(0,r.kt)("td",{parentName:"tr",align:null},"char"),(0,r.kt)("td",{parentName:"tr",align:null},"\xa01"),(0,r.kt)("td",{parentName:"tr",align:null},"Represents a 8-bit signed integer.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__types.html#gad8523b51611f0fac793f78f16b155b21"},"xtd::uint16")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#gad2d2369e4e7ed6c9add6ed934441941b"},"xtd::uint16_object")),(0,r.kt)("td",{parentName:"tr",align:null},"uint_least16_t"),(0,r.kt)("td",{parentName:"tr",align:null},"\xa0unsigned short"),(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"Represents a 16-bit unsigned integer.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__types.html#ga41c5d8b5d999ac5a2ff06fe57f38d5f5"},"xtd::uint32")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#gaf4dd9a26c2e1c77bc7ea42452ba0794f"},"xtd::uint32_object")),(0,r.kt)("td",{parentName:"tr",align:null},"uint_least32_t"),(0,r.kt)("td",{parentName:"tr",align:null},"unsigned int"),(0,r.kt)("td",{parentName:"tr",align:null},"4"),(0,r.kt)("td",{parentName:"tr",align:null},"\xa0Represents a 32-bit unsigned integer.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__types.html#gab5833228ed21371660af349c9b1fe797"},"xtd::uint64")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#gae01c8c184846ba16e80a4c5af471be3b"},"xtd::uint64_object")),(0,r.kt)("td",{parentName:"tr",align:null},"\xa0uint_least64_t"),(0,r.kt)("td",{parentName:"tr",align:null},"unsigned long long"),(0,r.kt)("td",{parentName:"tr",align:null},"\xa08"),(0,r.kt)("td",{parentName:"tr",align:null},"Represents a 64-bit unsigned integer.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__types.html#ga4393f509bf08c7e4ad25357e80f3ffff"},"xtd::uintptr")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#ga35c697da631eefc57a902da5ccc07e68"},"xtd::uintptr_object")),(0,r.kt)("td",{parentName:"tr",align:null},"uintmax_t"),(0,r.kt)("td",{parentName:"tr",align:null},"unsigned int",(0,r.kt)("em",{parentName:"td"}," - or - unsigned long long")," ",(0,r.kt)("em",{parentName:"td"},"(2)")),(0,r.kt)("td",{parentName:"tr",align:null},"4 - or - 8 ",(0,r.kt)("em",{parentName:"td"},"(2)")),(0,r.kt)("td",{parentName:"tr",align:null},"Represent an unsigned pointer or a handle.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\xa0",(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__types.html#ga4c9f72f7ab9ea9919c93a1a2b245ab71"},"xtd::single")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#ga84ac56442074e9ba86390626d8f83b7b"},"xtd::single_object")),(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"\xa04"),(0,r.kt)("td",{parentName:"tr",align:null},"Represents a single-precision floating-point number.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"double"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#ga9c0f11ebf71e3121a21e785a0c97c99d"},"xtd::double_object")),(0,r.kt)("td",{parentName:"tr",align:null},"double"),(0,r.kt)("td",{parentName:"tr",align:null},"double"),(0,r.kt)("td",{parentName:"tr",align:null},"8"),(0,r.kt)("td",{parentName:"tr",align:null},"Represents a double-precision floating-point number.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__types.html#ga1f5ab1e551070e04d6450399622c6f29"},"xtd::decimal")," ",(0,r.kt)("em",{parentName:"td"},"(3)")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#ga19d2fddd55b417489b4cf929a40a293e"},"xtd::decimal_object")),(0,r.kt)("td",{parentName:"tr",align:null},"long double ",(0,r.kt)("em",{parentName:"td"},"(3)")),(0,r.kt)("td",{parentName:"tr",align:null},"long double ",(0,r.kt)("em",{parentName:"td"},"(3)")),(0,r.kt)("td",{parentName:"tr",align:null},"8 - or -16 ",(0,r.kt)("em",{parentName:"td"},"(3)")),(0,r.kt)("td",{parentName:"tr",align:null},"Represents a double-precision floating-point number.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__types.html#ga92c4f59ae39104d31ce9c0c20810001d"},"xtd::size")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#ga38c2e723413a561059a0c53c07f167af"},"xtd::size_object")),(0,r.kt)("td",{parentName:"tr",align:null},"size_t"),(0,r.kt)("td",{parentName:"tr",align:null},"result of the sizeof operator ",(0,r.kt)("em",{parentName:"td"},"(2)")),(0,r.kt)("td",{parentName:"tr",align:null},"4 - or - 8 ",(0,r.kt)("em",{parentName:"td"},"(2)")),(0,r.kt)("td",{parentName:"tr",align:null},"Represent an unsigned pointer or a handle.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1date__time.html"},"xtd::date_time")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1date__time.html"},"xtd::date_time")),(0,r.kt)("td",{parentName:"tr",align:null},"/"),(0,r.kt)("td",{parentName:"tr",align:null},"/"),(0,r.kt)("td",{parentName:"tr",align:null},"8"),(0,r.kt)("td",{parentName:"tr",align:null},"Represents an instant in time, typically expressed as a date and time of day.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"const char*"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1string.html"},"xtd::string")),(0,r.kt)("td",{parentName:"tr",align:null},"\xa0std::string"),(0,r.kt)("td",{parentName:"tr",align:null},"\xa0std::string ",(0,r.kt)("em",{parentName:"td"},"(4)")),(0,r.kt)("td",{parentName:"tr",align:null},"variable"),(0,r.kt)("td",{parentName:"tr",align:null},"Represents text as a series of unicode characters.")))),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"(1) Depend of OS : if build on Windows is 2 bytes, if build on Linux or many other non-Windows systems is 4 bytes.")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"(2) Depend of build : if build in 32 bits the size is 4 bytes, if build in 64 bits the size is 8 bytes.")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"(3) ",(0,r.kt)("a",{parentName:"em",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__types.html#ga1f5ab1e551070e04d6450399622c6f29"},"xtd::decimal")," is an extended precision floating-point type.\nMatches ",(0,r.kt)("a",{parentName:"em",href:"https://en.wikipedia.org/wiki/Extended_precision"},"IEEE-754 binary128 format")," if supported, otherwise matches IEEE-754 binary64-extended format if supported,\notherwise matches some non-IEEE-754 extended floating-point format as long as its precision is better than binary64 and range is at least as good as binary64,\notherwise matches IEEE-754 binary64 format.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"binary128 format is used by some HP-UX, SPARC, MIPS, ARM64, and z/OS implementations.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"The most well known IEEE-754 binary64-extended format is 80-bit x87 extended precision format. It is used by many x86 and x86-64 implementations (a notable exception is MSVC, which implements ",(0,r.kt)("inlineCode",{parentName:"em"},"long double")," in the same format as ",(0,r.kt)("inlineCode",{parentName:"em"},"double"),", i.e. binary64)."))),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"(4) The std::string type is the main string datatype in standard C++ since 1998, but it was not always part of C++98.")),(0,r.kt)("p",null,"For more information about c++ type see ",(0,r.kt)("a",{parentName:"p",href:"https://en.cppreference.com/w/cpp/language/types"},"cppreference language type")," section."),(0,r.kt)("p",null,"For the complete list of xtd types see ",(0,r.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__types.html"},"xtd - Referecne Guide - types")," section."),(0,r.kt)("h2",{id:"limits"},"Limits"),(0,r.kt)("p",null,"xtd define the minimum and maximum constant value for each types."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Minimum Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Maximum Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Minimum Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Maximum Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\xa0",(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#ga020fbeceaf011505de3ac30168375664"},"xtd::boolean_object")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#"},"xtd::boolean_object::min_value")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#"},"xtd::boolean_object::max_value")),(0,r.kt)("td",{parentName:"tr",align:null},"\xa0false"),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\xa0",(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#ga3fc22386b24ad6ba85daeff85cb79661"},"xtd::byte_object")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1box__integer.html#abacf9950b09d5d214dcfa6205559785d"},"xtd::byte_object::min_value")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1box__integer.html#a21847edbb248c1b0d07a35e2a8c08232"},"xtd::byte_object::max_value")),(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"255")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\xa0",(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#ga9b68e8829910e613dac8a6148477ad7c"},"xtd::int16_object")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1box__integer.html#abacf9950b09d5d214dcfa6205559785d"},"xtd::int16_object::min_value")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1box__integer.html#a21847edbb248c1b0d07a35e2a8c08232"},"xtd::int16_object::max_value")),(0,r.kt)("td",{parentName:"tr",align:null},"-32768"),(0,r.kt)("td",{parentName:"tr",align:null},"32767")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#ga4be46d51c646a03427dc92e2bf35cd38"},"xtd::int32_object")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1box__integer.html#abacf9950b09d5d214dcfa6205559785d"},"xtd::int32_object::min_value")),(0,r.kt)("td",{parentName:"tr",align:null},"\xa0",(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1box__integer.html#a21847edbb248c1b0d07a35e2a8c08232"},"xtd::int32_object::max_value")),(0,r.kt)("td",{parentName:"tr",align:null},"\xa0-2147483648"),(0,r.kt)("td",{parentName:"tr",align:null},"2147483647")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#ga6186e201158c8307f663ac4d00466b86"},"xtd::int64_object")),(0,r.kt)("td",{parentName:"tr",align:null},"\xa0",(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1box__integer.html#abacf9950b09d5d214dcfa6205559785d"},"xtd::int64_object::min_value")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1box__integer.html#a21847edbb248c1b0d07a35e2a8c08232"},"xtd::int64_object::max_value")),(0,r.kt)("td",{parentName:"tr",align:null},"-9223372036854775808"),(0,r.kt)("td",{parentName:"tr",align:null},"\xa09223372036854775807")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#gaf42f67c02d59e5180de4a25c387c4ce7"},"xtd::sbyte_object")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1box__integer.html#abacf9950b09d5d214dcfa6205559785d"},"xtd::sbyte_object::min_value")),(0,r.kt)("td",{parentName:"tr",align:null},"\xa0",(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1box__integer.html#a21847edbb248c1b0d07a35e2a8c08232"},"xtd::sbyte_object::max_value")),(0,r.kt)("td",{parentName:"tr",align:null},"\xa0-128"),(0,r.kt)("td",{parentName:"tr",align:null},"\xa0127")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\xa0",(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#gad2d2369e4e7ed6c9add6ed934441941b"},"xtd::uint16_object")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1box__integer.html#abacf9950b09d5d214dcfa6205559785d"},"xtd::uint16_object::min_value")),(0,r.kt)("td",{parentName:"tr",align:null},"\xa0",(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1box__integer.html#a21847edbb248c1b0d07a35e2a8c08232"},"xtd::uint16_object::max_value")),(0,r.kt)("td",{parentName:"tr",align:null},"\xa00"),(0,r.kt)("td",{parentName:"tr",align:null},"\xa065535")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#gaf4dd9a26c2e1c77bc7ea42452ba0794f"},"xtd::uint32_object")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1box__integer.html#abacf9950b09d5d214dcfa6205559785d"},"xtd::uint32_object::min_value")),(0,r.kt)("td",{parentName:"tr",align:null},"\xa0",(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1box__integer.html#a21847edbb248c1b0d07a35e2a8c08232"},"xtd::uint32_object::max_value")),(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"4294967295")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\xa0",(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#gae01c8c184846ba16e80a4c5af471be3b"},"xtd::uint64_object")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1box__integer.html#abacf9950b09d5d214dcfa6205559785d"},"xtd::uint64_object::min_value")),(0,r.kt)("td",{parentName:"tr",align:null},"\xa0",(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1box__integer.html#a21847edbb248c1b0d07a35e2a8c08232"},"xtd::uint64_object::max_value")),(0,r.kt)("td",{parentName:"tr",align:null},"\xa00"),(0,r.kt)("td",{parentName:"tr",align:null},"18446744073709551615")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#ga84ac56442074e9ba86390626d8f83b7b"},"xtd::single_object")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1box__integer.html#abacf9950b09d5d214dcfa6205559785d"},"xtd::single_object::min_value")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1box__integer.html#a21847edbb248c1b0d07a35e2a8c08232"},"xtd::single_object::max_value")),(0,r.kt)("td",{parentName:"tr",align:null},"-3.40282e+038f"),(0,r.kt)("td",{parentName:"tr",align:null},"\xa03.40282e+038f")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#ga9c0f11ebf71e3121a21e785a0c97c99d"},"xtd::double_object")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1box__integer.html#abacf9950b09d5d214dcfa6205559785d"},"xtd::double_object::min_value")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1box__integer.html#a21847edbb248c1b0d07a35e2a8c08232"},"xtd::double_object::max_value")),(0,r.kt)("td",{parentName:"tr",align:null},"-1.79769e+308"),(0,r.kt)("td",{parentName:"tr",align:null},"1.79769e+308")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#ga19d2fddd55b417489b4cf929a40a293e"},"xtd::decimal_object")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1box__integer.html#abacf9950b09d5d214dcfa6205559785d"},"xtd::decimal_object::min_value")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1box__integer.html#a21847edbb248c1b0d07a35e2a8c08232"},"xtd::decimal_object::max_value")),(0,r.kt)("td",{parentName:"tr",align:null},"-1.79769e+308"),(0,r.kt)("td",{parentName:"tr",align:null},"1.79769e+308")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1date__time.html"},"xtd::date_time")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1date__time.html#a2052693f474e549778be006a9bf9ffcd"},"xtd::date_time::min_value")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1date__time.html#af86fd0f8e3f55ca8f3ffa6daeb7187bb"},"xtd::date_time::max_value")),(0,r.kt)("td",{parentName:"tr",align:null},"00:00:00, January 1, 0001"),(0,r.kt)("td",{parentName:"tr",align:null},"23:59:59, December 31, 9999")))),(0,r.kt)("h3",{id:"remarks-1"},"Remarks"),(0,r.kt)("p",null,"Of course, ",(0,r.kt)("a",{parentName:"p",href:"https://en.cppreference.com/w/cpp/types/numeric_limits"},"std::numeric_limits")," works for the types described above except for ",(0,r.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1date__time.html"},"xtd::date_time"),"."),(0,r.kt)("h2",{id:"boxing"},"Boxing"),(0,r.kt)("p",null,"For explicit boxing a type into corresponding object class use ",(0,r.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#ga7352fcff0da12feb0aff421fc8c41d15"},"xtd::boxing")," method.\nBy default, the boxing implicit in the corresponding object is used."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"bool value_unboxed = true;\nxtd::boolean_object value_boxed1 = value_unboxed;               // implicit\nxtd::boolean_object value_boxed2 = xtd::boxing(value_unboxed);  // explicit\nauto ready_boxed3 = xtd::boxing(value_unboxed);                 // explicit with auto is xtd::boolean_object type\n")),(0,r.kt)("h2",{id:"unboxing"},"Unboxing"),(0,r.kt)("p",null,"For explicit unboxing a object class into corresponding type use ",(0,r.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__system.html#ga5aa911c016af5795d0482eefb481fcc9"},"xtd::unboxing")," method.\nBy default, the unboxing implicit in the corresponding type is used."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"xtd::boolean_object value_boxed = true;\nbool value_unboxed1 = value_boxed;                 // implicit\nbool value_unboxed2 = xtd::unboxing(value_boxed);  // explict\nauto value_unboxed3 = xtd::unboxing(value_boxed);  // explict with auto is bool\n")),(0,r.kt)("h1",{id:"see-also"},"See also"),(0,r.kt)("p",null,"\u200b"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/documentation/Guides/Overview/Tutorials"},"Tutorials")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/documentation"},"Documentation"))))}o.isMDXComponent=!0}}]);