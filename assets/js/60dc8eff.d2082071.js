"use strict";(self.webpackChunkxtd=self.webpackChunkxtd||[]).push([[8939],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),u=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=u(n),d=r,h=m["".concat(c,".").concat(d)]||m[d]||p[d]||o;return n?a.createElement(h,l(l({ref:t},s),{},{components:n})):a.createElement(h,l({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var u=2;u<o;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},23458:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var a=n(87462),r=(n(67294),n(3905));const o={sidebar_position:15},l="Some useful git commands",i={unversionedId:"documentation/Guides/Overview/Tutorials/git",id:"documentation/Guides/Overview/Tutorials/git",title:"Some useful git commands",description:"Clone",source:"@site/docs/documentation/Guides/Overview/Tutorials/git.md",sourceDirName:"documentation/Guides/Overview/Tutorials",slug:"/documentation/Guides/Overview/Tutorials/git",permalink:"/xtd/docs/documentation/Guides/Overview/Tutorials/git",draft:!1,tags:[],version:"current",sidebarPosition:15,frontMatter:{sidebar_position:15},sidebar:"tutorialSidebar",previous:{title:"Writing test applications",permalink:"/xtd/docs/documentation/Guides/Overview/Tutorials/writing_applicaion_test"},next:{title:"Class cleanup (class_cleanup)",permalink:"/xtd/docs/documentation/Guides/Overview/Tutorials/class_cleanup"}},c={},u=[{value:"Clone",id:"clone",level:2},{value:"Status",id:"status",level:2},{value:"Pull",id:"pull",level:2},{value:"Creation of a branch",id:"creation-of-a-branch",level:2},{value:"Checkout",id:"checkout",level:2},{value:"Commit",id:"commit",level:2},{value:"Merge",id:"merge",level:2},{value:"Remove branch",id:"remove-branch",level:2},{value:"GitHub Desktop application",id:"github-desktop-application",level:2},{value:"See also",id:"see-also",level:2}],s={toc:u};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"some-useful-git-commands"},"Some useful git commands"),(0,r.kt)("h2",{id:"clone"},"Clone"),(0,r.kt)("p",null,"In general this command is done only once.\nClone a remote project locally in your working folder:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"cd Projects\\xtd\ngit clone https://github.com/gammasoft71/xtd\n")),(0,r.kt)("h2",{id:"status"},"Status"),(0,r.kt)("p",null,"You are automatically on the master branch, you can check by typing the command"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"git status\n")),(0,r.kt)("h2",{id:"pull"},"Pull"),(0,r.kt)("p",null,"Every time you want to resynchronize your local repo with the remote repo to get the latest changes"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"git pull\n")),(0,r.kt)("h2",{id:"creation-of-a-branch"},"Creation of a branch"),(0,r.kt)("p",null,"If you want to create a dev branch "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"git branch my_branch_dev1\n")),(0,r.kt)("p",null,"You have just created the branch but you are still on the active master branch."),(0,r.kt)("h2",{id:"checkout"},"Checkout"),(0,r.kt)("p",null,"If you want to work on your my_branch_dev1 branch"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"git checkout my_branch_dev1\n")),(0,r.kt)("p",null,"The active branch is now my_branch_dev1."),(0,r.kt)("p",null,"If you want to go back to your master branch"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"git checkout master\n")),(0,r.kt)("p",null,"The active branch is now master."),(0,r.kt)("h2",{id:"commit"},"Commit"),(0,r.kt)("p",null,"When you want to commit your files to any active branch"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'git commit -m "My commit message" --all\n')),(0,r.kt)("p",null,"or for a specific file"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'git commit -m "My commit message" my_class.h\n')),(0,r.kt)("h2",{id:"merge"},"Merge"),(0,r.kt)("p",null,"When you want to merge your dev branch into master"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"git checkout master\ngit merge my_branch_dev1\n")),(0,r.kt)("h2",{id:"remove-branch"},"Remove branch"),(0,r.kt)("p",null,"When you want to remove your dev branch"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"git branch -d my_branch_dev1\n")),(0,r.kt)("h2",{id:"github-desktop-application"},"GitHub Desktop application"),(0,r.kt)("p",null,"When you have understood the principles of git branches and git commands, the easiest way is to use the ",(0,r.kt)("a",{parentName:"p",href:"https://desktop.github.com"},"GitHub Desktop")," application."),(0,r.kt)("h2",{id:"see-also"},"See also"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/documentation"},"Documentation"))))}p.isMDXComponent=!0}}]);