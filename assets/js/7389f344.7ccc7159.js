"use strict";(self.webpackChunkxtd=self.webpackChunkxtd||[]).push([[9713],{3905:(t,e,a)=>{a.d(e,{Zo:()=>u,kt:()=>m});var n=a(67294);function l(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function o(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function r(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?o(Object(a),!0).forEach((function(e){l(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function s(t,e){if(null==t)return{};var a,n,l=function(t,e){if(null==t)return{};var a,n,l={},o=Object.keys(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||(l[a]=t[a]);return l}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(l[a]=t[a])}return l}var i=n.createContext({}),p=function(t){var e=n.useContext(i),a=e;return t&&(a="function"==typeof t?t(e):r(r({},e),t)),a},u=function(t){var e=p(t.components);return n.createElement(i.Provider,{value:e},t.children)},_={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},c=n.forwardRef((function(t,e){var a=t.components,l=t.mdxType,o=t.originalType,i=t.parentName,u=s(t,["components","mdxType","originalType","parentName"]),c=p(a),m=l,d=c["".concat(i,".").concat(m)]||c[m]||_[m]||o;return a?n.createElement(d,r(r({ref:e},u),{},{components:a})):n.createElement(d,r({ref:e},u))}));function m(t,e){var a=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var o=a.length,r=new Array(o);r[0]=c;var s={};for(var i in e)hasOwnProperty.call(e,i)&&(s[i]=e[i]);s.originalType=t,s.mdxType="string"==typeof t?t:l,r[1]=s;for(var p=2;p<o;p++)r[p]=a[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},19176:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>r,default:()=>_,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=a(87462),l=(a(67294),a(3905));const o={},r="Containers",s={unversionedId:"documentation/Guides/xtd.forms/Overview/containers",id:"documentation/Guides/xtd.forms/Overview/containers",title:"Containers",description:"* Controls",source:"@site/docs/documentation/Guides/xtd.forms/Overview/containers.md",sourceDirName:"documentation/Guides/xtd.forms/Overview",slug:"/documentation/Guides/xtd.forms/Overview/containers",permalink:"/xtd/docs/documentation/Guides/xtd.forms/Overview/containers",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Components",permalink:"/xtd/docs/documentation/Guides/xtd.forms/Overview/components"},next:{title:"Control appearance",permalink:"/xtd/docs/documentation/Guides/xtd.forms/Overview/control_appearance"}},i={},p=[{value:"Controls",id:"controls",level:2},{value:"Standard containers",id:"standard-containers",level:2},{value:"Fixed layout panel",id:"fixed-layout-panel",level:3},{value:"Example",id:"example",level:4},{value:"Group box",id:"group-box",level:3},{value:"Example",id:"example-1",level:4},{value:"Panel",id:"panel",level:3},{value:"Popup panel",id:"popup-panel",level:3},{value:"Example",id:"example-2",level:4},{value:"Splitter panel",id:"splitter-panel",level:3},{value:"Tab page",id:"tab-page",level:3},{value:"Example",id:"example-3",level:4},{value:"Remarks",id:"remarks",level:3},{value:"Layout containers",id:"layout-containers",level:2},{value:"Remarks",id:"remarks-1",level:4},{value:"Flow layout panel",id:"flow-layout-panel",level:3},{value:"Horizontal layout panel",id:"horizontal-layout-panel",level:3},{value:"Horizontal layout panel styles",id:"horizontal-layout-panel-styles",level:3},{value:"Remarks",id:"remarks-2",level:4},{value:"Examples",id:"examples",level:4},{value:"Table layout panel",id:"table-layout-panel",level:3},{value:"Vertical layout panel",id:"vertical-layout-panel",level:3},{value:"Vertical layout panel styles",id:"vertical-layout-panel-styles",level:3},{value:"Remarks",id:"remarks-3",level:4},{value:"Examples",id:"examples-1",level:4},{value:"Specific containers",id:"specific-containers",level:2},{value:"Collapsible panel",id:"collapsible-panel",level:3},{value:"Split container",id:"split-container",level:3},{value:"Remarks",id:"remarks-4",level:4},{value:"Tab control",id:"tab-control",level:3},{value:"Remarks",id:"remarks-5",level:4},{value:"Example",id:"example-4",level:4},{value:"User container",id:"user-container",level:2},{value:"Own horizontal stack panel",id:"own-horizontal-stack-panel",level:3},{value:"Own vertical stack panel",id:"own-vertical-stack-panel",level:3}],u={toc:p};function _(t){let{components:e,...a}=t;return(0,l.kt)("wrapper",(0,n.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"containers"},"Containers"),(0,l.kt)("h1",{id:"table-of-content"},"Table of content"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#controls"},"Controls")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#standard-containers"},"Standard containers"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#fixed-layout-panel"},"Fixed layout panel")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#group-box"},"Group box")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#panel"},"Panel")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#popup-panel"},"Popup panel")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#splitter-panel"},"Splitter panel")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#tab-page"},"Tab page")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#layout-containers"},"Layout containers"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#flow-layout-panel"},"Flow layout panel")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#horizontal-layout-panel"},"Horizontal layout panel")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#table-layout-panel"},"Table layout panel")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#vertical-layout-panel"},"Vertical layout panel")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#specific-containers"},"Specific containers"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#collapsible-panel"},"Collapsible panel")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#split-container"},"Split container")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#tab-control"},"Tab control")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#user-container"},"User container"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#own-horizontal-stack-panel"},"Own horizontal stack panel")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#own-vertical-stack-panel"},"Own vertical stack panel"))))),(0,l.kt)("h2",{id:"controls"},"Controls"),(0,l.kt)("p",null,"Any control can be a container. Indeed a control can have several children.\nFor more information, see ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/gammasoft71/xtd/blob/master/docs/xtd_forms_explanations.md#parent-and-children"},"Parent and children"),"."),(0,l.kt)("p",null,"While this is possible, we generally prefer to use defined containers that have specific properties to handle child controls."),(0,l.kt)("h2",{id:"standard-containers"},"Standard containers"),(0,l.kt)("p",null,"These containers use ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1control.html#a704049ab20aa16e25dca51911b0ba13b"},"location"),", ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1control.html#a2a9c3b512b6748c8330fe2231839c4cb"},"size"),", ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1control.html#ad6dfcca7a2ecd41e2679d6b3085103fe"},"auto_size"),", ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1control.html#a3908bffd315d0bfc8b2656f89e2dc42c"},"anchor")," and ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1control.html#adb3febb83c715c2f7e014b47c9cb1df7"},"dock")," for children controls."),(0,l.kt)("p",null,"For more information, see ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/gammasoft71/xtd/blob/master/docs/size_and_location_properties.md"},"Size and location properties")," and ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/gammasoft71/xtd/blob/master/docs/position_and_layout_of_controls.md"},"Position and layout of controls"),"."),(0,l.kt)("h3",{id:"fixed-layout-panel"},"Fixed layout panel"),(0,l.kt)("p",null,"The ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1fixed__layout__panel.html"},"fixed_layout_panel")," is used to group collections of fixed aligned controls."),(0,l.kt)("h4",{id:"example"},"Example"),(0,l.kt)("p",null,"The following example demonstrates the use of ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1fixed__layout__panel.html"},"fixed_layout_panel")," container."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <xtd/xtd>\n\nusing namespace xtd::forms;\n\nclass form1 : public form {\npublic:\n  form1() {\n    client_size({400, 200});\n    \n    panel1.parent(*this).dock(dock_style::fill);\n    panel1.controls().push_back_range({button1, button2, button3, button4});\n    \n    button1.location({10, 10});\n    button1.text("button 1");\n\n    button2.location({10, 55});\n    button2.text("button 2");\n\n    button3.location({10, 100});\n    button3.text("button 3");\n\n    button4.location({10, 145});\n    button4.text("button 4");\n  }\n  \nprivate:\n  fixed_layout_panel panel1;\n  button button1;\n  button button2;\n  button button3;\n  button button4;\n};\n\nauto main() -> int {\n  application::run(form1());\n}\n')),(0,l.kt)("h3",{id:"group-box"},"Group box"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1group__box.html"},"group_box")," represents a Windows control that displays a frame around a group of controls with an optional caption."),(0,l.kt)("h4",{id:"example-1"},"Example"),(0,l.kt)("p",null,"The following example demonstrates the use of ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1group__box.html"},"group_box")," container."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <xtd/xtd>\n\nusing namespace xtd::forms;\n\nclass form1 : public form {\npublic:\n  form1() {\n    client_size({400, 200});\n    \n    group_box1.parent(*this).dock(dock_style::fill);\n    group_box1.controls().push_back_range({button1, button2, button3, button4});\n    \n    button1.location({10, 10});\n    button1.text("button 1");\n\n    button2.location({10, 55});\n    button2.text("button 2");\n\n    button3.location({10, 100});\n    button3.text("button 3");\n\n    button4.location({10, 145});\n    button4.text("button 4");\n  }\n  \nprivate:\n  group_box group_box1;\n  button button1;\n  button button2;\n  button button3;\n  button button4;\n};\n\nauto main() -> int {\n  application::run(form1());\n}\n')),(0,l.kt)("h3",{id:"panel"},"Panel"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1panel.html"},"panel")," is used to group collections of controls."),(0,l.kt)("p",null,"The following example demonstrates the use of ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1panel.html"},"panel")," container."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <xtd/xtd>\n\nusing namespace xtd::forms;\n\nclass form1 : public form {\npublic:\n  form1() {\n    client_size({400, 200});\n    \n    panel1.parent(*this).dock(dock_style::fill);\n    panel1.controls().push_back_range({button1, button2, button3, button4});\n    \n    button1.location({10, 10});\n    button1.text("button 1");\n\n    button2.location({10, 55});\n    button2.text("button 2");\n\n    button3.location({10, 100});\n    button3.text("button 3");\n\n    button4.location({10, 145});\n    button4.text("button 4");\n  }\n  \nprivate:\n  fixed_layout_panel panel1;\n  button button1;\n  button button2;\n  button button3;\n  button button4;\n};\n\nauto main() -> int {\n  application::run(form1());\n}\n')),(0,l.kt)("h3",{id:"popup-panel"},"Popup panel"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1popup__panel.html"},"popup_panel")," represents a special type of panel container that can be used for ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1context__menu.html"},"context_menu"),", ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1combo__box.html"},"combo_box")," popups and more."),(0,l.kt)("h4",{id:"example-2"},"Example"),(0,l.kt)("p",null,"The following example demonstrates the use of ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1popup__panel.html"},"popup_panel")," container."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <xtd/xtd>\n\nusing namespace xtd;\nusing namespace xtd::drawing;\nusing namespace xtd::forms;\n\nclass form1 : public form {\npublic:\n  form1() {\n    text("Popup panel example");\n    client_size({300, 100});\n    controls().push_back_range({button1, popup_panel1});\n    \n    list_box1.parent(popup_panel1);\n    list_box1.dock(dock_style::fill);\n    list_box1.items().push_back_range({{"clear", button_images::from_name("weather-clear")}, {"clear night", button_images::from_name("weather-clear-night")}, {"few clouds", button_images::from_name("weather-few-clouds")}, {"few clouds night", button_images::from_name("weather-few-clouds-night")}, {"fog", button_images::from_name("weather-fog")}, {"overcast", button_images::from_name("weather-overcast")}, {"severe alert", button_images::from_name("weather-severe-alert")}, {"showers", button_images::from_name("weather-showers")}, {"showers scattered", button_images::from_name("weather-showers-scattered")}, {"snow", button_images::from_name("weather-snow")}, {"storm", button_images::from_name("weather-storm")}});\n    list_box1.selected_index(0);\n    list_box1.click += [&] {\n      button1.text(list_box1.selected_item().value());\n      button1.image(as<image>(list_box1.selected_item().tag()));\n      popup_panel1.hide();\n    };\n    \n    button1.location({10, 10});\n    button1.size({160, 50});\n    button1.image_align(content_alignment::top_center);\n    button1.text_align(content_alignment::bottom_center);\n    button1.text(list_box1.selected_item().value());\n    button1.image(as<image>(list_box1.selected_item().tag()));\n    button1.click += [&] {\n      popup_panel1.show();\n    };\n\n    popup_panel1.location(button1.location());\n    popup_panel1.width(button1.width());\n  }\n  \nprivate:\n  button button1;\n  list_box list_box1;\n  popup_panel popup_panel1;\n};\n\nauto main() -> int {\n  application::run(form1 {});\n}\n')),(0,l.kt)("h3",{id:"splitter-panel"},"Splitter panel"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1splitter__panel.html"},"splitter_panel")," represents a panel that is associated with a split_container."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Coming soon...")),(0,l.kt)("h3",{id:"tab-page"},"Tab page"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1tab__page.html"},"tab_page")," represents a single tab page in a tab_control."),(0,l.kt)("h4",{id:"example-3"},"Example"),(0,l.kt)("p",null,"The following example demonstrates the use of ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1tab__page.html"},"tab_page")," container."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <xtd/xtd>\n\nusing namespace xtd::forms;\n\nclass form1 : public form {\npublic:\n  form1() {\n    text("Tab control example");\n    controls().push_back(tab_control1);\n    client_size({390, 270});\n    \n    tab_control1.location({10, 10});\n    tab_control1.size({370, 250});\n    tab_control1.anchor(anchor_styles::left | anchor_styles::top | anchor_styles::right | anchor_styles::bottom);\n\n    tab_page1.parent(tab_control1);\n    tab_page1.text("Tab page 1");\n    \n    label1.dock(dock_style::fill);\n    label1.parent(tab_page1);\n    label1.text("label1");\n    label1.text_align(xtd::forms::content_alignment::top_left);\n    \n    tab_page2.parent(tab_control1);\n    tab_page2.text("Tab page 2");\n    \n    label2.dock(dock_style::fill);\n    label2.parent(tab_page2);\n    label2.text_align(xtd::forms::content_alignment::middle_center);\n    label2.text("label2");\n    \n    tab_page3.parent(tab_control1);\n    tab_page3.text("Tab page 3");\n    \n    label3.dock(dock_style::fill);\n    label3.parent(tab_page3);\n    label3.text_align(xtd::forms::content_alignment::bottom_right);\n    label3.text("label3");\n  }\n  \nprivate:\n  tab_control tab_control1;\n  tab_page tab_page1;\n  tab_page tab_page2;\n  tab_page tab_page3;\n  \n  label label1;\n  label label2;\n  label label3;\n};\n\nauto main() -> int {\n  application::run(form1 {});\n}\n')),(0,l.kt)("h3",{id:"remarks"},"Remarks"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1fixed__layout__panel.html"},"fixed_layout_panel")," is the same as ",(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1panel.html"},"panel"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1splitter__panel.html"},"splitter_panel")," is used with ",(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1split__container.html"},"splitt_container")," and is the same as ",(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1panel.html"},"panel"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1tab__page.html"},"tab_page")," is used with ",(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1tab__page.html"},"tab_page")," and is the same as ",(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1panel.html"},"panel"),".")),(0,l.kt)("h2",{id:"layout-containers"},"Layout containers"),(0,l.kt)("p",null,"The layout containers manage the layout of child controls.\nUnlike standard containers, they manage the size, position and layout of child controls and do not use user-defined child control properties."),(0,l.kt)("h4",{id:"remarks-1"},"Remarks"),(0,l.kt)("p",null,"Layout containers can use the dock or anchor to position themselves in the parent control (Usually we use ",(0,l.kt)("inlineCode",{parentName:"p"},"dock(dock_style::fill))"),". "),(0,l.kt)("p",null,"On the other hand, child controls of layout panel cannot use the dock or anchor properties because it is the layout panel that decides how to display them according to the chosen options."),(0,l.kt)("h3",{id:"flow-layout-panel"},"Flow layout panel"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1flow__layout__panel.html"},"flow_layout_panel")," is used to group collections of fixed aligned controls."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Coming soon...")),(0,l.kt)("h3",{id:"horizontal-layout-panel"},"Horizontal layout panel"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1horizontal__layout__panel.html"},"horizontal_layout_panel")," is used to group collections of horizontally aligned controls."),(0,l.kt)("h3",{id:"horizontal-layout-panel-styles"},"Horizontal layout panel styles"),(0,l.kt)("p",null,"For each child control of ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1horizontal__layout__panel.html"},"horizontal_layout_panel")," an ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1horizontal__control__layout__style.html"},"horizontal_layout_style")," style is associate.\nYou can specify for each chid control the layout style to the layout container by the method ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1horizontal__layout__panel.html#a6e1ad8fe72ee251ca0c35e7316cc29fa"},"control_layout_style"),".\nIf you don't specify the layout style, it use the style by default."),(0,l.kt)("p",null,"An ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1horizontal__control__layout__style.html"},"horizontal_layout_style")," is composed of :"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"content_alignment :\tOne of the ",(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gad8fe8984e9f4652c13654b2c4d7288f0"},"content_alignment")," values. The default is middle_center.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gad8fe8984e9f4652c13654b2c4d7288f0"},"top_left")," : Content is vertically aligned at the top, and horizontally aligned on the left."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gad8fe8984e9f4652c13654b2c4d7288f0"},"top_center")," : Content is vertically aligned at the top, and horizontally aligned at the center."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gad8fe8984e9f4652c13654b2c4d7288f0"},"top_right")," : Content is vertically aligned at the top, and horizontally aligned on the right."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gad8fe8984e9f4652c13654b2c4d7288f0"},"middle_left")," : Content is vertically aligned in the middle, and horizontally aligned on the left."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gad8fe8984e9f4652c13654b2c4d7288f0"},"middle_center")," : Content is vertically aligned at the middle, and horizontally aligned at the center."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gad8fe8984e9f4652c13654b2c4d7288f0"},"middle_right")," : Content is vertically aligned at the middle, and horizontally aligned on the right."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gad8fe8984e9f4652c13654b2c4d7288f0"},"bottom_left")," : Content is vertically aligned in the bottom, and horizontally aligned on the left."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gad8fe8984e9f4652c13654b2c4d7288f0"},"bottom_center")," : Content is vertically aligned at the bottom, and horizontally aligned at the center."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gad8fe8984e9f4652c13654b2c4d7288f0"},"bottom_right")," : Content is vertically aligned at the bottom, and horizontally aligned on the right."))),(0,l.kt)("li",{parentName:"ul"},"exapend : A flag indicating if control is expanded to its containing layout container. The default is false."),(0,l.kt)("li",{parentName:"ul"},"size_type : One of the ",(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gab29b04bbaf914660d81ba98475d8a100"},"size_type")," values that specifies how layout container of user interface (UI) elements should be sized relative to their container. The default is auto_size.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gab29b04bbaf914660d81ba98475d8a100"},"auto_size")," : The control should be automatically sized to share space with its peers."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gab29b04bbaf914660d81ba98475d8a100"},"absolute")," : The control should be sized to an exact number of pixels. (Style by default)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gab29b04bbaf914660d81ba98475d8a100"},"percent")," : The control should be sized as a percentage of the parent container."))),(0,l.kt)("li",{parentName:"ul"},"width : The prefered width in pixel or percent depending the size_type. The default is std::nullopt.")),(0,l.kt)("h4",{id:"remarks-2"},"Remarks"),(0,l.kt)("p",null,"If you don't set expand to true and you set the height of the control. the ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1horizontal__layout__panel.html"},"horizontal_layout_panel")," will take this into account.\nBut not the width."),(0,l.kt)("h4",{id:"examples"},"Examples"),(0,l.kt)("p",null,"The following example shows how to create a ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1horizontal__layout__panel.html"},"horizontal_layout_panel")," with children that have a default style."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <xtd/xtd.forms.h>\n\nusing namespace xtd;\nusing namespace xtd::forms;\n\nclass form1 : public form {\npublic:\n  form1() {\n    client_size({400, 200});\n    \n    panel1.parent(*this).dock(dock_style::fill);\n    panel1.controls().push_back_range({button1, button2, button3, button4});\n    \n    button1.flat_style(xtd::forms::flat_style::popup).text("button 1");\n    button2.flat_style(xtd::forms::flat_style::popup).text("button 2");\n    button3.flat_style(xtd::forms::flat_style::popup).text("button 3");\n    button4.flat_style(xtd::forms::flat_style::popup).text("button 4");\n  }\n  \nprivate:\n  horizontal_layout_panel panel1;\n  button button1;\n  button button2;\n  button button3;\n  button button4;\n};\n\nauto main() -> int {\n  application::run(form1());\n}\n')),(0,l.kt)("p",null,"The following example shows how to create a ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1horizontal__layout__panel.html"},"horizontal_layout_panel")," whose children must have a size corresponding to a percentage of the parent container."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <xtd/xtd.forms.h>\n\nusing namespace xtd;\nusing namespace xtd::forms;\n\nclass form1 : public form {\npublic:\n  form1() {\n    client_size({400, 200});\n    \n    panel1.parent(*this).dock(dock_style::fill);\n    panel1.controls().push_back_range({button1, button2, button3, button4});\n    \n    panel1.control_layout_style(button1, horizontal_control_layout_style{.15f, size_type::percent});\n    panel1.control_layout_style(button2, horizontal_control_layout_style{.35f, size_type::percent});\n    panel1.control_layout_style(button3, horizontal_control_layout_style{.35f, size_type::percent});\n    panel1.control_layout_style(button4, horizontal_control_layout_style{.15f, size_type::percent});\n\n    button1.flat_style(xtd::forms::flat_style::popup).text("button 1");\n    button2.flat_style(xtd::forms::flat_style::popup).text("button 2");\n    button3.flat_style(xtd::forms::flat_style::popup).text("button 3");\n    button4.flat_style(xtd::forms::flat_style::popup).text("button 4");\n  }\n  \nprivate:\n  horizontal_layout_panel panel1;\n  button button1;\n  button button2;\n  button button3;\n  button button4;\n};\n\nauto main() -> int {\n  application::run(form1());\n}\n')),(0,l.kt)("p",null,"The following example shows how to create a ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1horizontal__layout__panel.html"},"horizontal_layout_panel")," whose children must have a size corresponding to a abosulte value in pixels and set expand to true."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <xtd/xtd.forms.h>\n\nusing namespace xtd;\nusing namespace xtd::forms;\n\nclass form1 : public form {\npublic:\n  form1() {\n    client_size({400, 200});\n    \n    panel1.parent(*this).dock(dock_style::fill);\n    panel1.controls().push_back_range({button1, button2, button3, button4});\n    \n    panel1.control_layout_style(button1, horizontal_control_layout_style{75, size_type::absolute, true});\n    panel1.control_layout_style(button2, horizontal_control_layout_style{125, size_type::absolute, true});\n    panel1.control_layout_style(button3, horizontal_control_layout_style{125, size_type::absolute, true});\n    panel1.control_layout_style(button4, horizontal_control_layout_style{75, size_type::absolute, true});\n\n    button1.flat_style(xtd::forms::flat_style::popup).text("button 1");\n    button2.flat_style(xtd::forms::flat_style::popup).text("button 2");\n    button3.flat_style(xtd::forms::flat_style::popup).text("button 3");\n    button4.flat_style(xtd::forms::flat_style::popup).text("button 4");\n  }\n  \nprivate:\n  horizontal_layout_panel panel1;\n  button button1;\n  button button2;\n  button button3;\n  button button4;\n};\n\nauto main() -> int {\n  application::run(form1());\n}\n')),(0,l.kt)("h3",{id:"table-layout-panel"},"Table layout panel"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1table__layout__panel.html"},"table_layout_panel")," is used to group collections of fixed aligned controls."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Coming soon...")),(0,l.kt)("h3",{id:"vertical-layout-panel"},"Vertical layout panel"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1vertical__layout__panel.html"},"vertical_layout_panel")," is used to group collections of verticaly aligned controls."),(0,l.kt)("h3",{id:"vertical-layout-panel-styles"},"Vertical layout panel styles"),(0,l.kt)("p",null,"For each child control of ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1vertical__layout__panel.html"},"vertical_layout_panel")," an ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1vertical__control__layout__style.html"},"vertical_layout_style")," style is associate.\nYou can specify for each chid control the layout style to the layout container by the method ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1vertical__layout__panel.html#a059dccea939682c556eac63a4288b0ca"},"control_layout_style"),".\nIf you don't specify the layout style, it use the style by default."),(0,l.kt)("p",null,"An ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1vertical__control__layout__style.html"},"vertical_layout_style")," is composed of :"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"content_alignment :\tOne of the ",(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gad8fe8984e9f4652c13654b2c4d7288f0"},"content_alignment")," values. The default is middle_center.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gad8fe8984e9f4652c13654b2c4d7288f0"},"top_left")," : Content is vertically aligned at the top, and horizontally aligned on the left."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gad8fe8984e9f4652c13654b2c4d7288f0"},"top_center")," : Content is vertically aligned at the top, and horizontally aligned at the center."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gad8fe8984e9f4652c13654b2c4d7288f0"},"top_right")," : Content is vertically aligned at the top, and horizontally aligned on the right."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gad8fe8984e9f4652c13654b2c4d7288f0"},"middle_left")," : Content is vertically aligned in the middle, and horizontally aligned on the left."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gad8fe8984e9f4652c13654b2c4d7288f0"},"middle_center")," : Content is vertically aligned at the middle, and horizontally aligned at the center."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gad8fe8984e9f4652c13654b2c4d7288f0"},"middle_right")," : Content is vertically aligned at the middle, and horizontally aligned on the right."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gad8fe8984e9f4652c13654b2c4d7288f0"},"bottom_left")," : Content is vertically aligned in the bottom, and horizontally aligned on the left."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gad8fe8984e9f4652c13654b2c4d7288f0"},"bottom_center")," : Content is vertically aligned at the bottom, and horizontally aligned at the center."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gad8fe8984e9f4652c13654b2c4d7288f0"},"bottom_right")," : Content is vertically aligned at the bottom, and horizontally aligned on the right."))),(0,l.kt)("li",{parentName:"ul"},"exapend : A flag indicating if control is expanded to its containing layout container. The default is false."),(0,l.kt)("li",{parentName:"ul"},"size_type : One of the ",(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gab29b04bbaf914660d81ba98475d8a100"},"size_type")," values that specifies how layout container of user interface (UI) elements should be sized relative to their container. The default is auto_size.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gab29b04bbaf914660d81ba98475d8a100"},"auto_size")," : The control should be automatically sized to share space with its peers."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gab29b04bbaf914660d81ba98475d8a100"},"absolute")," : The control should be sized to an exact number of pixels. (Style by default)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html#gab29b04bbaf914660d81ba98475d8a100"},"percent")," : The control should be sized as a percentage of the parent container."))),(0,l.kt)("li",{parentName:"ul"},"width : The prefered width in pixel or percent depending the size_type. The default is std::nullopt.")),(0,l.kt)("h4",{id:"remarks-3"},"Remarks"),(0,l.kt)("p",null,"If you don't set expand to true and you set the width of the control. the ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1vertical__layout__panel.html"},"vertical_layout_panel")," will take this into account.\nBut not the height."),(0,l.kt)("h4",{id:"examples-1"},"Examples"),(0,l.kt)("p",null,"The following example shows how to create a ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1vertical__layout__panel.html"},"vertical_layout_panel")," with children that have a default style."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <xtd/xtd.forms.h>\n\nusing namespace xtd;\nusing namespace xtd::forms;\n\nclass form1 : public form {\npublic:\n  form1() {\n    client_size({200, 400});\n    \n    panel1.parent(*this).dock(dock_style::fill);\n    panel1.controls().push_back_range({button1, button2, button3, button4});\n    \n    button1.flat_style(xtd::forms::flat_style::popup).text("button 1");\n    button2.flat_style(xtd::forms::flat_style::popup).text("button 2");\n    button3.flat_style(xtd::forms::flat_style::popup).text("button 3");\n    button4.flat_style(xtd::forms::flat_style::popup).text("button 4");\n  }\n  \nprivate:\n  vertical_layout_panel panel1;\n  button button1;\n  button button2;\n  button button3;\n  button button4;\n};\n\nauto main() -> int {\n  application::run(form1());\n}\n')),(0,l.kt)("p",null,"The following example shows how to create a ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1vertical__layout__panel.html"},"vertical_layout_panel")," whose children must have a size corresponding to a percentage of the parent container."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <xtd/xtd.forms.h>\n\nusing namespace xtd;\nusing namespace xtd::forms;\n\nclass form1 : public form {\npublic:\n  form1() {\n    client_size({200, 400});\n    \n    panel1.parent(*this).dock(dock_style::fill);\n    panel1.controls().push_back_range({button1, button2, button3, button4});\n    \n    panel1.control_layout_style(button1, vertical_control_layout_style{.15f, size_type::percent});\n    panel1.control_layout_style(button2, vertical_control_layout_style{.35f, size_type::percent});\n    panel1.control_layout_style(button3, vertical_control_layout_style{.35f, size_type::percent});\n    panel1.control_layout_style(button4, vertical_control_layout_style{.15f, size_type::percent});\n\n    button1.flat_style(xtd::forms::flat_style::popup).text("button 1");\n    button2.flat_style(xtd::forms::flat_style::popup).text("button 2");\n    button3.flat_style(xtd::forms::flat_style::popup).text("button 3");\n    button4.flat_style(xtd::forms::flat_style::popup).text("button 4");\n  }\n  \nprivate:\n  vertical_layout_panel panel1;\n  button button1;\n  button button2;\n  button button3;\n  button button4;\n};\n\nauto main() -> int {\n  application::run(form1());\n}\n')),(0,l.kt)("p",null,"The following example shows how to create a ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1vertical__layout__panel.html"},"vertical_layout_panel")," whose children must have a size corresponding to a abosulte value in pixels and set expand to true."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <xtd/xtd.forms.h>\n\nusing namespace xtd;\nusing namespace xtd::forms;\n\nclass form1 : public form {\npublic:\n  form1() {\n    client_size({200, 400});\n    \n    panel1.parent(*this).dock(dock_style::fill);\n    panel1.controls().push_back_range({button1, button2, button3, button4});\n    \n    panel1.control_layout_style(button1, vertical_control_layout_style{75, size_type::absolute, true});\n    panel1.control_layout_style(button2, vertical_control_layout_style{125, size_type::absolute, true});\n    panel1.control_layout_style(button3, vertical_control_layout_style{125, size_type::absolute, true});\n    panel1.control_layout_style(button4, vertical_control_layout_style{75, size_type::absolute, true});\n\n    button1.flat_style(xtd::forms::flat_style::popup).text("button 1");\n    button2.flat_style(xtd::forms::flat_style::popup).text("button 2");\n    button3.flat_style(xtd::forms::flat_style::popup).text("button 3");\n    button4.flat_style(xtd::forms::flat_style::popup).text("button 4");\n  }\n  \nprivate:\n  vertical_layout_panel panel1;\n  button button1;\n  button button2;\n  button button3;\n  button button4;\n};\n\nauto main() -> int {\n  application::run(form1());\n}\n')),(0,l.kt)("h2",{id:"specific-containers"},"Specific containers"),(0,l.kt)("h3",{id:"collapsible-panel"},"Collapsible panel"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1collapsible__panel.html"},"collapsible_panel")," is used to group collections of controls in a collapsible panel."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"coming soon...")),(0,l.kt)("h3",{id:"split-container"},"Split container"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1split__container.html"},"split_container")," represents a control consisting of a movable bar that divides a container's display area into two resizable panels."),(0,l.kt)("h4",{id:"remarks-4"},"Remarks"),(0,l.kt)("p",null,"The child control for the ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1split__container.html"},"split_container")," are ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1splitter__panel.html"},"splitter_panel"),"."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"coming soon...")),(0,l.kt)("h3",{id:"tab-control"},"Tab control"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1tab__control.html"},"tab_control")," manages a related set of tab pages."),(0,l.kt)("h4",{id:"remarks-5"},"Remarks"),(0,l.kt)("p",null,"The child controls for the ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1tab__control.html"},"tab_control")," are ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1tab__page.html"},"tab_page"),"."),(0,l.kt)("h4",{id:"example-4"},"Example"),(0,l.kt)("p",null,"The following example demonstrates the use of ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1tab__control.html"},"tab_control")," container."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <xtd/xtd>\n\nusing namespace xtd::forms;\n\nclass form1 : public form {\npublic:\n  form1() {\n    text("Tab control example");\n    controls().push_back(tab_control1);\n    client_size({390, 270});\n    \n    tab_control1.location({10, 10});\n    tab_control1.size({370, 250});\n    tab_control1.anchor(anchor_styles::left | anchor_styles::top | anchor_styles::right | anchor_styles::bottom);\n\n    tab_page1.parent(tab_control1);\n    tab_page1.text("Tab page 1");\n    \n    label1.dock(dock_style::fill);\n    label1.parent(tab_page1);\n    label1.text("label1");\n    label1.text_align(xtd::forms::content_alignment::top_left);\n    \n    tab_page2.parent(tab_control1);\n    tab_page2.text("Tab page 2");\n    \n    label2.dock(dock_style::fill);\n    label2.parent(tab_page2);\n    label2.text_align(xtd::forms::content_alignment::middle_center);\n    label2.text("label2");\n    \n    tab_page3.parent(tab_control1);\n    tab_page3.text("Tab page 3");\n    \n    label3.dock(dock_style::fill);\n    label3.parent(tab_page3);\n    label3.text_align(xtd::forms::content_alignment::bottom_right);\n    label3.text("label3");\n  }\n  \nprivate:\n  tab_control tab_control1;\n  tab_page tab_page1;\n  tab_page tab_page2;\n  tab_page tab_page3;\n  \n  label label1;\n  label label2;\n  label label3;\n};\n\nauto main() -> int {\n  application::run(form1 {});\n}\n')),(0,l.kt)("h2",{id:"user-container"},"User container"),(0,l.kt)("p",null,"xtd is flexible and complete enough to create your own container without much effort."),(0,l.kt)("h3",{id:"own-horizontal-stack-panel"},"Own horizontal stack panel"),(0,l.kt)("p",null,"The following example show how to make your own horizontal stack panel esasily with overloading ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__events.html#ga277d5f851e0d49163d9fdecaace4d7bd"},"on_layout")," method."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <xtd/xtd.forms.h>\n\nusing namespace xtd;\nusing namespace xtd::forms;\n\nclass horizontal_stack_panel : public panel {\nprotected:\n  void on_layout(const event_args& e) override {\n    panel::on_layout(e);\n    auto left = 0;\n    for (auto control : controls()) {\n      control.get().left(left).height(client_size().height());\n      left += control.get().width();\n    }\n  }\n};\n\nclass form1 : public form {\npublic:\n  form1() {\n    client_size({400, 200});\n    \n    panel1.parent(*this).size({300, 35});\n    panel1.controls().push_back_range({button1, button2, button3, button4});\n    \n    button1.flat_style(xtd::forms::flat_style::popup).text("button 1");\n    button2.flat_style(xtd::forms::flat_style::popup).text("button 2");\n    button3.flat_style(xtd::forms::flat_style::popup).text("button 3");\n    button4.flat_style(xtd::forms::flat_style::popup).text("button 4");\n  }\n  \nprivate:\n  horizontal_stack_panel panel1;\n  button button1;\n  button button2;\n  button button3;\n  button button4;\n};\n\nauto main() -> int {\n  application::run(form1());\n}\n')),(0,l.kt)("h3",{id:"own-vertical-stack-panel"},"Own vertical stack panel"),(0,l.kt)("p",null,"The following example show how to make your own vertical stack panel esasily with ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1control.html#adb3febb83c715c2f7e014b47c9cb1df7"},"dock")," and overloading ",(0,l.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__events.html#ga76d3b55915e43555fe652aa4d71ae2f0"},"on_control_added")," method."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <xtd/xtd.forms.h>\n\nusing namespace xtd;\nusing namespace xtd::forms;\n\nclass vertical_stack_panel : public panel {\nprotected:\n  void on_control_added(const control_event_args& e) override {\n    panel::on_control_added(e);\n    e.control().dock(dock_style::top);\n  }\n};\n\nclass form1 : public form {\npublic:\n  form1() {\n    client_size({400, 200});\n    \n    panel1.parent(*this).size({100, 150});\n    panel1.controls().push_back_range({button4, button3, button2, button1});\n    \n    button1.flat_style(xtd::forms::flat_style::popup).text("button 1");\n    button2.flat_style(xtd::forms::flat_style::popup).text("button 2");\n    button3.flat_style(xtd::forms::flat_style::popup).text("button 3");\n    button4.flat_style(xtd::forms::flat_style::popup).text("button 4");\n  }\n  \nprivate:\n  vertical_stack_panel panel1;\n  button button1;\n  button button2;\n  button button3;\n  button button4;\n};\n\nauto main() -> int {\n  application::run(form1());\n}\n')),(0,l.kt)("h1",{id:"see-also"},"See also"),(0,l.kt)("p",null,"\u200b"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/documentation/Guides"},"Guides")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/documentation"},"Documentation"))))}_.isMDXComponent=!0}}]);