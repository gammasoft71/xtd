"use strict";(self.webpackChunkxtd=self.webpackChunkxtd||[]).push([[3747],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=s(n),m=o,k=u["".concat(c,".").concat(m)]||u[m]||d[m]||l;return n?a.createElement(k,r(r({ref:t},p),{},{components:n})):a.createElement(k,r({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,r=new Array(l);r[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,r[1]=i;for(var s=2;s<l;s++)r[s]=n[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},44766:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var a=n(87462),o=(n(67294),n(3905));const l={sidebar_position:12},r="Writing console application",i={unversionedId:"documentation/Guides/Overview/Tutorials/writing_applicaion_console",id:"documentation/Guides/Overview/Tutorials/writing_applicaion_console",title:"Writing console application",description:"In this section",source:"@site/docs/documentation/Guides/Overview/Tutorials/writing_applicaion_console.md",sourceDirName:"documentation/Guides/Overview/Tutorials",slug:"/documentation/Guides/Overview/Tutorials/writing_applicaion_console",permalink:"/xtd/docs/documentation/Guides/Overview/Tutorials/writing_applicaion_console",draft:!1,tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_position:12},sidebar:"tutorialSidebar",previous:{title:"Tutorials",permalink:"/xtd/docs/documentation/Guides/Overview/Tutorials/"},next:{title:"Writing GUI application",permalink:"/xtd/docs/documentation/Guides/Overview/Tutorials/writing_applicaion_gui"}},c={},s=[{value:"In this section",id:"in-this-section",level:2},{value:"Create console",id:"create-console",level:2},{value:"To create the console",id:"to-create-the-console",level:3},{value:"To create the CMakeLists.txt",id:"to-create-the-cmakeliststxt",level:3},{value:"To compile and run the application",id:"to-compile-and-run-the-application",level:3},{value:"Adding a write line and read line",id:"adding-a-write-line-and-read-line",level:2},{value:"To change background and foreground colors and write and read line with the console",id:"to-change-background-and-foreground-colors-and-write-and-read-line-with-the-console",level:3},{value:"Example",id:"example",level:2},{value:"See also",id:"see-also",level:2}],p={toc:s};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"writing-console-application"},"Writing console application"),(0,o.kt)("h2",{id:"in-this-section"},"In this section"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#create-console"},"Create console")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#adding-a-write-line-and-read-line"},"Adding a write line and read line")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#example"},"Example"))),(0,o.kt)("p",null,"This tutorial describes the basic steps that you must complete to create and run a console application from the command line."),(0,o.kt)("h2",{id:"create-console"},"Create console"),(0,o.kt)("p",null,"The following procedures describe the basic steps that you must complete to create and run a console application from the command line."),(0,o.kt)("h3",{id:"to-create-the-console"},"To create the console"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create console1.cpp file in your project folder and type the following include file and using statements:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <xtd/xtd>\n\nusing namespace xtd;\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Declare a class named ",(0,o.kt)("strong",{parentName:"li"},"console1"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class console1\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Create a default constructor for ",(0,o.kt)("strong",{parentName:"li"},"console1"),".")),(0,o.kt)("p",null,"You will add more code to the constructor in a subsequent procedure."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"  public:\n    console1() {}\n")),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},"Add a main method.")),(0,o.kt)("p",null,"Create an instance of the ",(0,o.kt)("strong",{parentName:"p"},"console1"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"auto main() -> int {\n  console1 {};\n}\n")),(0,o.kt)("h3",{id:"to-create-the-cmakeliststxt"},"To create the CMakeLists.txt"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create CMakeLists.txt file in your project folder and add the cmake minimum version required.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cmake"},"cmake_minimum_required(VERSION 3.20)\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Set the project name and add xtd.forms package.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cmake"},"Project(console1)\nfind_package(xtd REQUIRED)\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Add build rules for the he project.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cmake"},"add_sources(console1.cpp)\ntarget_type(CONSOLE_APPLICATION)\n")),(0,o.kt)("h3",{id:"to-compile-and-run-the-application"},"To compile and run the application"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"At the Terminal, navigate to the directory you created the console1.cpp class and CMakeLists.txt file.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Compile the console."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"xtdc build\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"At the command prompt, type:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"xtdc run\n")),(0,o.kt)("h2",{id:"adding-a-write-line-and-read-line"},"Adding a write line and read line"),(0,o.kt)("p",null,"The previous procedure steps demonstrated how to just create a basic console that compiles and runs."),(0,o.kt)("h3",{id:"to-change-background-and-foreground-colors-and-write-and-read-line-with-the-console"},"To change background and foreground colors and write and read line with the console"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Change background color"),(0,o.kt)("li",{parentName:"ol"},"Change foreground color"),(0,o.kt)("li",{parentName:"ol"},"Write desired text to the console."),(0,o.kt)("li",{parentName:"ol"},"Ask user and write result in ",(0,o.kt)("strong",{parentName:"li"},"name"),"."),(0,o.kt)("li",{parentName:"ol"},"Write formatted result to the console.")),(0,o.kt)("p",null,"The following code example demonstrates how to write and read with the ",(0,o.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1console.html"},"console"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},'  console1() {\n    console::background_color(console_color::blue);\n    console::foreground_color(console_color::white);\n    console::write_line("What\'s your name ?");\n    auto name = console::read_line();\n    console::write_line("Hello, {}", name);\n  }\n')),(0,o.kt)("ol",{start:6},(0,o.kt)("li",{parentName:"ol"},"Compile and run the application.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"xtdc run\n")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("p",null,"Following code example is the complete example from the previous tutorial."),(0,o.kt)("p",null,"console1.cpp:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <xtd/xtd>\n\nusing namespace xtd;\n\nclass console1 {\npublic:\n  console1() {\n    console::background_color(console_color::blue);\n    console::foreground_color(console_color::white);\n    console::write_line("What\'s your name ?");\n    auto name = console::read_line();\n    console::write_line("Hello, {}", name);\n  }\n};\n\nauto main() -> int {\n  console1 {};\n}\n')),(0,o.kt)("p",null,"CMakeLists.txt:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cmake"},"cmake_minimum_required(VERSION 3.20)\n\nproject(console1)\nfind_package(xtd REQUIRED)\nadd_sources(console1.cpp)\ntarget_type(CONSOLE_APPLICATION)\n")),(0,o.kt)("h2",{id:"see-also"},"See also"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/documentation/Guides/Overview/Tutorials"},"tutorials")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/documentation"},"Documentation"))))}d.isMDXComponent=!0}}]);