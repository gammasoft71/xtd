"use strict";(self.webpackChunkxtd=self.webpackChunkxtd||[]).push([[4503],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),s=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,f=d["".concat(i,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(f,c(c({ref:t},u),{},{components:n})):r.createElement(f,c({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,c[1]=l;for(var s=2;s<a;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},71544:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=n(87462),o=(n(67294),n(3905));const a={},c="Selecting a Collection Class",l={unversionedId:"documentation/Guides/xtd.core/Collections/Selecting a Collection Class",id:"documentation/Guides/xtd.core/Collections/Selecting a Collection Class",title:"Selecting a Collection Class",description:"Be sure to choose your collection class carefully. Using the wrong type can restrict your use of the collection.",source:"@site/docs/documentation/Guides/xtd.core/Collections/Selecting a Collection Class.md",sourceDirName:"documentation/Guides/xtd.core/Collections",slug:"/documentation/Guides/xtd.core/Collections/Selecting a Collection Class",permalink:"/xtd/docs/documentation/Guides/xtd.core/Collections/Selecting a Collection Class",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Files (xtd.cmake)",permalink:"/xtd/docs/documentation/Guides/xtd.cmake/Overview/cmake_files"},next:{title:"Overview",permalink:"/xtd/docs/documentation/Guides/xtd.core/Collections/overview"}},i={},s=[],u={toc:s};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"selecting-a-collection-class"},"Selecting a Collection Class"),(0,o.kt)("p",null,"Be sure to choose your collection class carefully. Using the wrong type can restrict your use of the collection."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Important"),"\nAvoid using the types in the ",(0,o.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/namespacextd_1_1collections.html"},"xtd::collections")," namespace. The ",(0,o.kt)("a",{parentName:"p",href:"https://en.cppreference.com/w/cpp/container"},"generic")," and ",(0,o.kt)("a",{parentName:"p",href:"#"},"concurrent")," versions of the collections are recommended because of their greater type safety and other improvements.")),(0,o.kt)("p",null,"Consider the following questions:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Do you need a sequential list where the element is typically discarded after its value is retrieved?",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"If yes, consider using the ",(0,o.kt)("a",{parentName:"li",href:"#"},"xtd::collection::queue")," class or the ",(0,o.kt)("a",{parentName:"li",href:"https://en.cppreference.com/w/cpp/container/queue"},"std::queue<type_t>")," generic class if you need first-in, first-out (FIFO) behavior. Consider using the ",(0,o.kt)("a",{parentName:"li",href:"#"},"xtd::collection::stack")," class or the ",(0,o.kt)("a",{parentName:"li",href:"https://en.cppreference.com/w/cpp/container/stack"},"std::stack<type_t>")," generic class if you need last-in, first-out (LIFO) behavior. For safe access from multiple threads, use the concurrent versions, ",(0,o.kt)("a",{parentName:"li",href:"#"},"xtd::collection::concurrent::concurrent_queue<typr_t>")," and ",(0,o.kt)("a",{parentName:"li",href:"#"},"xtd::collection::concurrent::concurrent_stack<type_t>"),"."),(0,o.kt)("li",{parentName:"ul"},"If not, consider using the other collections."))),(0,o.kt)("li",{parentName:"ul"},"Do you need to access the elements in a certain order, such as FIFO, LIFO, or random?",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("a",{parentName:"li",href:"#"},"xtd::collection::queue")," class, as well as the ",(0,o.kt)("a",{parentName:"li",href:"https://en.cppreference.com/w/cpp/container/queue"},"std::queue<type_t>")," and ",(0,o.kt)("a",{parentName:"li",href:"#"},"xtd::collection::concurrent::concurrent_queue<typr_t>")," generic classes all offer FIFO access. For more information, see When to Use a Thread-Safe Collection."),(0,o.kt)("li",{parentName:"ul"},"The  ",(0,o.kt)("a",{parentName:"li",href:"#"},"xtd::collection::stack")," class, as well as the ",(0,o.kt)("a",{parentName:"li",href:"https://en.cppreference.com/w/cpp/container/stack"},"std::stack<type_t>")," and ",(0,o.kt)("a",{parentName:"li",href:"#"},"xtd::collection::concurrent::concurrent_stack<type_t>")," generic classes all offer LIFO access. For more information, see When to Use a Thread-Safe Collection."),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("a",{parentName:"li",href:"https://en.cppreference.com/w/cpp/container/list"},"std::list<type_t>")," generic class allows sequential access either from the head to the tail, or from the tail to the head.")))),(0,o.kt)("h1",{id:"see-also"},"See also"),(0,o.kt)("p",null,"\u200b"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/documentation/Guides"},"Guides")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/documentation"},"Documentation"))))}p.isMDXComponent=!0}}]);