"use strict";(self.webpackChunkxtd=self.webpackChunkxtd||[]).push([[5110],{3905:(e,t,o)=>{o.d(t,{Zo:()=>u,kt:()=>m});var r=o(67294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function s(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function c(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)o=i[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)o=i[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var a=r.createContext({}),d=function(e){var t=r.useContext(a),o=t;return e&&(o="function"==typeof e?e(t):s(s({},t),e)),o},u=function(e){var t=d(e.components);return r.createElement(a.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,i=e.originalType,a=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=d(o),m=n,y=p["".concat(a,".").concat(m)]||p[m]||l[m]||i;return o?r.createElement(y,s(s({ref:t},u),{},{components:o})):r.createElement(y,s({ref:t},u))}));function m(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=o.length,s=new Array(i);s[0]=p;var c={};for(var a in t)hasOwnProperty.call(t,a)&&(c[a]=t[a]);c.originalType=e,c.mdxType="string"==typeof e?e:n,s[1]=c;for(var d=2;d<i;d++)s[d]=o[d];return r.createElement.apply(null,s)}return r.createElement.apply(null,o)}p.displayName="MDXCreateElement"},2068:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>l,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var r=o(87462),n=(o(67294),o(3905));const i={},s="How to: Copy Directories",c={unversionedId:"documentation/Guides/xtd.core/Common I:O tasks/How-tos/copy_directories",id:"documentation/Guides/xtd.core/Common I:O tasks/How-tos/copy_directories",title:"How to: Copy Directories",description:"This article demonstrates how to use I/O classes to synchronously copy the contents of a directory to another location.",source:"@site/docs/documentation/Guides/xtd.core/Common I:O tasks/How-tos/copy_directories.md",sourceDirName:"documentation/Guides/xtd.core/Common I:O tasks/How-tos",slug:"/documentation/Guides/xtd.core/Common I:O tasks/How-tos/copy_directories",permalink:"/xtd/docs/documentation/Guides/xtd.core/Common I:O tasks/How-tos/copy_directories",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Common I/O Tasks",permalink:"/xtd/docs/documentation/Guides/xtd.core/Common I:O tasks/"},next:{title:"How to: Enumerate Directories and Files",permalink:"/xtd/docs/documentation/Guides/xtd.core/Common I:O tasks/How-tos/enumerate_directories_and_files"}},a={},d=[{value:"Examples",id:"examples",level:2},{value:"See also",id:"see-also",level:2}],u={toc:d};function l(e){let{components:t,...o}=e;return(0,n.kt)("wrapper",(0,r.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"how-to-copy-directories"},"How to: Copy Directories"),(0,n.kt)("p",null,"This article demonstrates how to use I/O classes to synchronously copy the contents of a directory to another location.\nFor an example of asynchronous file copy, see Asynchronous file I/O.\nThis example copies subdirectories by setting the recursive parameter of the copy_directory method to true. The copy_directory method recursively copies subdirectories by calling itself on each subdirectory until there are no more to copy."),(0,n.kt)("h2",{id:"examples"},"Examples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <xtd/xtd>\n\nusing namespace std;\nusing namespace xtd;\nusing namespace xtd::io;\n\nclass program {\npublic:\n  static void copy_directory(const string& source_dir, const string& destination_dir, bool recursive) {\n    // Get information about the source directory\n    auto dir = directory_info(source_dir);\n    \n    // Check if the source directory exists\n    if (!dir.exists())\n      throw directory_not_found_exception(string::format("Source directory not found: {}", dir.full_name()));\n    \n    // Cache directories before we start copying\n    vector<directory_info> dirs = dir.get_directories();\n    \n    // Create the destination directory\n    directory::create_directory(destination_dir);\n    \n    // Get the files in the source directory and copy to the destination directory\n    for (const file_info& file : dir.get_files()) {\n      string target_file_path = path::combine(destination_dir, file.name());\n      file.copy_to(target_file_path);\n    }\n    \n    // If recursive and copying subdirectories, recursively call this method\n    if (recursive) {\n      for (const directory_info& sub_dir : dirs) {\n        string new_destination_dir = path::combine(destination_dir, sub_dir.name());\n        copy_directory(sub_dir.full_name(), new_destination_dir, true);\n      }\n    }\n  }\n  \n  static auto main() {\n    copy_directory(".",  path::combine(".", "copytest"), true);\n  }\n};\n\nstartup_(program::main);\n')),(0,n.kt)("h2",{id:"see-also"},"See also"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/documentation/Guides/xtd.core/Common%20I%3AO%20tasks"},"Common I/O Tasks")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/documentation/Guides/Overview/Tutorials"},"Tutorials")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/documentation"},"Documentation"))))}l.isMDXComponent=!0}}]);