"use strict";(self.webpackChunkxtd=self.webpackChunkxtd||[]).push([[686],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>m});var n=o(67294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function s(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var l=n.createContext({}),d=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):s(s({},t),e)),o},c=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=d(o),m=r,f=p["".concat(l,".").concat(m)]||p[m]||u[m]||a;return o?n.createElement(f,s(s({ref:t},c),{},{components:o})):n.createElement(f,s({ref:t},c))}));function m(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,s=new Array(a);s[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var d=2;d<a;d++)s[d]=o[d];return n.createElement.apply(null,s)}return n.createElement.apply(null,o)}p.displayName="MDXCreateElement"},28651:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var n=o(87462),r=(o(67294),o(3905));const a={},s="Overview of using controls (xtd)",i={unversionedId:"documentation/Guides/xtd.forms/Controls/overview",id:"documentation/Guides/xtd.forms/Controls/overview",title:"Overview of using controls (xtd)",description:"xtd.forms controls are reusable components that encapsulate user interface functionality and are used in client-side, Windows-based applications.",source:"@site/docs/documentation/Guides/xtd.forms/Controls/overview.md",sourceDirName:"documentation/Guides/xtd.forms/Controls",slug:"/documentation/Guides/xtd.forms/Controls/overview",permalink:"/xtd/docs/documentation/Guides/xtd.forms/Controls/overview",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Label control overview (xtd.forms)",permalink:"/xtd/docs/documentation/Guides/xtd.forms/Controls/labels"},next:{title:"Position and layout of controls (xtd.forms)",permalink:"/xtd/docs/documentation/Guides/xtd.forms/Controls/position_and_layout_of_controls"}},l={},d=[],c={toc:d};function u(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"overview-of-using-controls-xtd"},"Overview of using controls (xtd)"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html"},"xtd.forms")," controls are reusable components that encapsulate user interface functionality and are used in client-side, Windows-based applications.\nNot only does ",(0,r.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__xtd__forms.html"},"xtd::forms")," provide many ready-to-use controls, it also provides the infrastructure for developing your own controls.\nYou can combine existing controls, extend existing controls, or author your own custom controls.\nFor more information, see ",(0,r.kt)("a",{parentName:"p",href:"/docs/documentation/Guides/xtd.forms/Controls/custom_controls"},"Types of custom controls"),"."),(0,r.kt)("h1",{id:"adding-controls"},"Adding controls"),(0,r.kt)("p",null,"Controls are added through code. For more information, see Add a control (Windows Forms).\nIn the future controls can be added through xtd.code.\nWith the xtd.code designer, you will be able to place, size, align and move controls. "),(0,r.kt)("h1",{id:"layout-options"},"Layout options"),(0,r.kt)("p",null,"The position a control appears on a parent is determined by the value of the ",(0,r.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1control.html#a53e5a75ad180a2efadc129e5a3c18cbd"},"location")," property relative to the top-left of the parent surface.\nThe top-left position coordinate in the parent is (x0,y0). The size of the control is determined by the ",(0,r.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1control.html#ad6b15530ad92e3df1996d4fd3c0c862e"},"size")," property and represents the width and height of the control."),(0,r.kt)("p",null,"Besides manual positioning and sizing, various container controls are provided that help with automatic placement of controls."),(0,r.kt)("p",null,"For more information, see ",(0,r.kt)("a",{parentName:"p",href:"/docs/documentation/Guides/xtd.forms/Controls/position_and_layout_of_controls"},"Position and layout of controls")," and ",(0,r.kt)("a",{parentName:"p",href:"/docs/documentation/Guides/xtd.forms/Controls/Common%20tasks/dock_and_anchor_controls"},"How to dock and anchor controls"),"."),(0,r.kt)("h1",{id:"control-events"},"Control events"),(0,r.kt)("p",null,"Controls provide a set of common events through the base class: ",(0,r.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1control.html"},"Control"),". Not every control responds to every event.\nFor example, the ",(0,r.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1label.html"},"label")," control doesn't respond to keyboard input, so the ",(0,r.kt)("a",{parentName:"p",href:"#"},"control::preview_key_down")," event isn't raised.\nMost shared events fall under these categories:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Mouse events"),(0,r.kt)("li",{parentName:"ul"},"Keyboard events"),(0,r.kt)("li",{parentName:"ul"},"Property changed events"),(0,r.kt)("li",{parentName:"ul"},"Other events")),(0,r.kt)("p",null,"For more information, see ",(0,r.kt)("a",{parentName:"p",href:"/docs/documentation/Guides/xtd.forms/Controls/Events"},"Control events")," and ",(0,r.kt)("a",{parentName:"p",href:"/docs/documentation/Guides/xtd.forms/Controls/Common%20tasks/add_or_remove_event_handlers"},"How to handle a control event"),"."),(0,r.kt)("h1",{id:"see-also"},"See also"),(0,r.kt)("p",null,"\u200b"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/documentation/Guides"},"Guides")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/documentation"},"Documentation"))))}u.isMDXComponent=!0}}]);