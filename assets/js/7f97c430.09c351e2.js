"use strict";(self.webpackChunkxtd=self.webpackChunkxtd||[]).push([[8259],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>u});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(a),u=r,h=d["".concat(s,".").concat(u)]||d[u]||m[u]||o;return a?n.createElement(h,l(l({ref:t},p),{},{components:a})):n.createElement(h,l({ref:t},p))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},41687:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=a(87462),r=(a(67294),a(3905));const o={sidebar_position:13},l="Writing GUI application",i={unversionedId:"documentation/Guides/Overview/Tutorials/writing_applicaion_gui",id:"documentation/Guides/Overview/Tutorials/writing_applicaion_gui",title:"Writing GUI application",description:"In this section",source:"@site/docs/documentation/Guides/Overview/Tutorials/writing_applicaion_gui.md",sourceDirName:"documentation/Guides/Overview/Tutorials",slug:"/documentation/Guides/Overview/Tutorials/writing_applicaion_gui",permalink:"/xtd/docs/documentation/Guides/Overview/Tutorials/writing_applicaion_gui",draft:!1,tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13},sidebar:"tutorialSidebar",previous:{title:"Writing console application",permalink:"/xtd/docs/documentation/Guides/Overview/Tutorials/writing_applicaion_console"},next:{title:"Writing test applications",permalink:"/xtd/docs/documentation/Guides/Overview/Tutorials/writing_applicaion_test"}},s={},c=[{value:"In this section",id:"in-this-section",level:2},{value:"Create GUI",id:"create-gui",level:2},{value:"To create the form",id:"to-create-the-form",level:3},{value:"To create the CMakeLists.txt",id:"to-create-the-cmakeliststxt",level:3},{value:"To compile and run the application",id:"to-compile-and-run-the-application",level:3},{value:"Adding a Control and Handling an Event",id:"adding-a-control-and-handling-an-event",level:2},{value:"To declare a button control and handle its click event",id:"to-declare-a-button-control-and-handle-its-click-event",level:3},{value:"Example",id:"example",level:2},{value:"See also",id:"see-also",level:2}],p={toc:c};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"writing-gui-application"},"Writing GUI application"),(0,r.kt)("h2",{id:"in-this-section"},"In this section"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#create-gui"},"Create GUI")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#adding-a-control-and-handling-an-event"},"Adding a Control and Handling an Event")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#example"},"Example"))),(0,r.kt)("p",null,"This tutorial describes the basic steps that you must complete to create and run a GUI application from the command line."),(0,r.kt)("h2",{id:"create-gui"},"Create GUI"),(0,r.kt)("p",null,"The following procedures describe the basic steps that you must complete to create and run a GUI application from the command line."),(0,r.kt)("h3",{id:"to-create-the-form"},"To create the form"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create form1.cpp file in your project folder and type the following include file and using statements:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <xtd/xtd>\n\nusing namespace xtd;\nusing namespace xtd::forms;\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Declare a class named ",(0,r.kt)("strong",{parentName:"li"},"form1")," that inherits from the ",(0,r.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1form.html"},"form")," class.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class form1 : public form\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Create a default constructor for ",(0,r.kt)("strong",{parentName:"li"},"form1"),".")),(0,r.kt)("p",null,"You will add more code to the constructor in a subsequent procedure."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"  public:\n    form1() {}\n")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Add a main method.")),(0,r.kt)("p",null,"Create an instance of the ",(0,r.kt)("strong",{parentName:"p"},"form1")," and run it."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"auto main() -> int {\n  application::run(form1 {});\n}\n")),(0,r.kt)("h3",{id:"to-create-the-cmakeliststxt"},"To create the CMakeLists.txt"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create CMakeLists.txt file in your project folder and add the cmake minimum version required.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cmake"},"cmake_minimum_required(VERSION 3.20)\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Set the project name and add xtd package.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cmake"},"Project(form1)\nfind_package(xtd REQUIRED)\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Add build rules for the project.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cmake"},"add_sources(form1.cpp)\ntarget_type(GUI_APPLICATION)\n")),(0,r.kt)("h3",{id:"to-compile-and-run-the-application"},"To compile and run the application"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"At the Terminal, navigate to the directory you created the form1.cpp class and CMakeLists.txt file.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Compile the form."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"xtdc build\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"At the command prompt, type:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"xtdc run\n")),(0,r.kt)("h2",{id:"adding-a-control-and-handling-an-event"},"Adding a Control and Handling an Event"),(0,r.kt)("p",null,"The previous procedure steps demonstrated how to just create a basic GUI that compiles and runs.\nThe next procedure will show you how to create and add a ",(0,r.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1control.html"},"control")," to the ",(0,r.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1form.html"},"form"),", and handle an event for the ",(0,r.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1control.html"},"control"),"."),(0,r.kt)("p",null,"In addition to understanding how to create GUI applications, you should understand event-based programming and how to handle user input."),(0,r.kt)("h3",{id:"to-declare-a-button-control-and-handle-its-click-event"},"To declare a button control and handle its click event"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Declare a ",(0,r.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1button.html"},"button")," control named button1."),(0,r.kt)("li",{parentName:"ol"},"In the constructor, create the ",(0,r.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1button.html"},"button")," and set its ",(0,r.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1control.html#a2a9c3b512b6748c8330fe2231839c4cb"},"size"),", ",(0,r.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1control.html#a704049ab20aa16e25dca51911b0ba13b"},"location")," and ",(0,r.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1control.html#a3f3bc021d22dff6f3a32a8dae0e7bbe9"},"text")," properties."),(0,r.kt)("li",{parentName:"ol"},"Add the ",(0,r.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1button.html"},"button")," to the ",(0,r.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1form.html"},"form"),".")),(0,r.kt)("p",null,"The following code example demonstrates how to declare the ",(0,r.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1button.html"},"button")," control."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'  private:\n    button button1;\n\n  public:\n    Form1() {\n      button1.size(drawing::size {40, 40});\n      button1.location(drawing::point {30, 30});\n      button1.text("Click\\nme");\n      controls().push_back(button1);\n      button1.click += event_handler {*this, &form1::button1_click};\n    }\n')),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Create a method to handle the ",(0,r.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__events.html#ga651752ad0a3ec381983aa0b367291a68"},"click")," event for the ",(0,r.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1button.html"},"button"),"."),(0,r.kt)("li",{parentName:"ol"},"In the ",(0,r.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__events.html#ga651752ad0a3ec381983aa0b367291a68"},"click")," event handler, display a ",(0,r.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1message__box.html"},"message_box"),' with the message, "Hello World".')),(0,r.kt)("p",null,"The following code example demonstrates how to handle the ",(0,r.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1forms_1_1button.html"},"button")," control's click event."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'  private:\n    void button1_click(object& sender, const event_args& e) {\n      message_box::show("Hello World");\n    }\n')),(0,r.kt)("ol",{start:6},(0,r.kt)("li",{parentName:"ol"},"Associate the ",(0,r.kt)("a",{parentName:"li",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/group__events.html#ga651752ad0a3ec381983aa0b367291a68"},"click")," event with the method you created.")),(0,r.kt)("p",null,"The following code example demonstrates how to associate the event with the method."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"button1.click += event_handler {*this, &form1::button1_click};\n")),(0,r.kt)("ol",{start:7},(0,r.kt)("li",{parentName:"ol"},"Compile and run the application.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"xtdc run\n")),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"Following code example is the complete example from the previous tutorial."),(0,r.kt)("p",null,"form1.cpp:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <xtd/xtd.forms>\n\nusing namespace xtd;\nusing namespace xtd::forms;\n\nclass form1 : public form {  \npublic:\n  form1() {\n    button1.size(drawing::size {40, 40});\n    button1.location(drawing::point {30, 30});\n    button1.text("Click\\nme");\n    controls().push_back(button1);\n    button1.click += event_handler {*this, &form1::button1_click};\n  }\n\nprivate:\n  button button1;\n\n  void button1_click(object& sender, const event_args& e) {\n    message_box::show("Hello World");\n  }\n};\n\nauto main() -> int {\n  application::run(form1 {});\n}\n')),(0,r.kt)("p",null,"CMakeLists.txt:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cmake"},"cmake_minimum_required(VERSION 3.20)\n\nproject(form1)\nfind_package(xtd REQUIRED)\nadd_sources(form1.cpp)\ntarget_type(GUI_APPLICATION)\n")),(0,r.kt)("h2",{id:"see-also"},"See also"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/documentation/Guides/Overview/Tutorials"},"tutorials")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/documentation"},"Documentation"))))}m.isMDXComponent=!0}}]);