"use strict";(self.webpackChunkxtd=self.webpackChunkxtd||[]).push([[3954],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>u});var n=o(67294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var l=n.createContext({}),d=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},c=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var o=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=d(o),u=a,f=m["".concat(l,".").concat(u)]||m[u]||p[u]||r;return o?n.createElement(f,i(i({ref:t},c),{},{components:o})):n.createElement(f,i({ref:t},c))}));function u(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=o.length,i=new Array(r);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var d=2;d<r;d++)i[d]=o[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}m.displayName="MDXCreateElement"},10865:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var n=o(87462),a=(o(67294),o(3905));const r={},i="How to: Read Text from a File",s={unversionedId:"documentation/Guides/xtd.core/Common I:O tasks/How-tos/read_text_from_a_file",id:"documentation/Guides/xtd.core/Common I:O tasks/How-tos/read_text_from_a_file",title:"How to: Read Text from a File",description:"The following example shows how to read text from a text file using xtd for desktop apps. In example, when you create the instance of the xtd::streamreader class, you provide the relative or absolute path to the file.",source:"@site/docs/documentation/Guides/xtd.core/Common I:O tasks/How-tos/read_text_from_a_file.md",sourceDirName:"documentation/Guides/xtd.core/Common I:O tasks/How-tos",slug:"/documentation/Guides/xtd.core/Common I:O tasks/How-tos/read_text_from_a_file",permalink:"/xtd/docs/documentation/Guides/xtd.core/Common I:O tasks/How-tos/read_text_from_a_file",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"How to: Read and Write to a Newly Created Data File",permalink:"/xtd/docs/documentation/Guides/xtd.core/Common I:O tasks/How-tos/read_and_write_to_a_newly_created_data_file"},next:{title:"How to: Write Text to a File",permalink:"/xtd/docs/documentation/Guides/xtd.core/Common I:O tasks/How-tos/write_text_to_a_file"}},l={},d=[{value:"Example: Read in a console app",id:"example-read-in-a-console-app",level:2},{value:"Important",id:"important",level:3},{value:"See also",id:"see-also",level:2}],c={toc:d};function p(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"how-to-read-text-from-a-file"},"How to: Read Text from a File"),(0,a.kt)("p",null,"The following example shows how to read text from a text file using xtd for desktop apps. In example, when you create the instance of the ",(0,a.kt)("a",{parentName:"p",href:"https://gammasoft71.github.io/xtd/reference_guides/latest/classxtd_1_1io_1_1stream__reader.html"},"xtd::io::stream_reader")," class, you provide the relative or absolute path to the file."),(0,a.kt)("h2",{id:"example-read-in-a-console-app"},"Example: Read in a console app"),(0,a.kt)("p",null,"The following example shows a read operation within a console app. This example opens the text file using a stream reader, copies the contents to a string, and outputs the string to the console."),(0,a.kt)("h3",{id:"important"},"Important"),(0,a.kt)("p",null,"The example assume that a file named ",(0,a.kt)("inlineCode",{parentName:"p"},"test_file.txt")," already exists in the same folder as the app."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <xtd/xtd>\n\nusing namespace xtd;\nusing namespace xtd::io;\n\nclass program {\npublic:\n  static auto main() {\n    try {\n      // Open the text file using a stream reader.\n      using_ (stream_reader sr("test_file.txt")) {\n        // Read the stream as a string, and write the string to the console.\n        console::write_line(sr.read_to_end());\n      }\n    } catch (const io_exception& e) {\n      console::write_line("The file could not be read:");\n      console::write_line(e.message());\n    }\n  }\n};\n\nstartup_(program::main);\n')),(0,a.kt)("h2",{id:"see-also"},"See also"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/documentation/Guides/xtd.core/Common%20I%3AO%20tasks"},"Common I/O Tasks")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/documentation/Guides/Overview/Tutorials"},"Tutorials")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/documentation"},"Documentation"))))}p.isMDXComponent=!0}}]);