import * as React from 'react';
export interface StyleProps {
    container: string;
    basicChildStyle: string;
    label: string;
    clickableLabel: string;
    nullValue: string;
    undefinedValue: string;
    numberValue: string;
    stringValue: string;
    booleanValue: string;
    otherValue: string;
    punctuation: string;
    expandIcon: string;
    collapseIcon: string;
    collapsedContent: string;
    noQuotesForStringValues: boolean;
}
export interface JsonRenderProps<T> {
    field?: string;
    value: T;
    lastElement: boolean;
    level: number;
    style: StyleProps;
    shouldExpandNode: (level: number, value: any, field?: string) => boolean;
    clickToExpandNode: boolean;
}
export interface ExpandableRenderProps {
    field: string | undefined;
    value: Array<any> | object;
    data: Array<[string | undefined, any]>;
    openBracket: string;
    closeBracket: string;
    lastElement: boolean;
    level: number;
    style: StyleProps;
    shouldExpandNode: (level: number, value: any, field?: string) => boolean;
    clickToExpandNode: boolean;
}
export interface EmptyRenderProps {
    field: string | undefined;
    openBracket: string;
    closeBracket: string;
    lastElement: boolean;
    style: StyleProps;
}
export default function DataRender(props: JsonRenderProps<any>): React.JSX.Element;
