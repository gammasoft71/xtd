using System.Globalization;
using System.Text;

class GenerateCultureInfoCpp {
  static void Main() {
    Console.WriteLine($"Generation started");
    var sb = new StringBuilder();
    sb.AppendLine("// This code was generated by tools/GenerateCultureInfoCpp.");
    sb.AppendLine("//");
    sb.AppendLine("// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.");
    sb.AppendLine();
    sb.AppendLine("#include \"../../../include/xtd/globalization/culture_info\"");
    sb.AppendLine();
    sb.AppendLine("using namespace xtd;");
    sb.AppendLine("using namespace xtd::globalization;");
    sb.AppendLine();
    sb.AppendLine("array<culture_info> culture_info::cultures_ = {");

    foreach (var cultureInfo in CultureInfo.GetCultures(CultureTypes.AllCultures)) {
      var cultureType = ToString(cultureInfo.CultureTypes & CultureTypes.AllCultures);
      var displayName = Escape(cultureInfo.DisplayName);
      var englishName = Escape(cultureInfo.EnglishName);
      var keyboardLayoutId = cultureInfo.KeyboardLayoutId;
      var lcid = cultureInfo.LCID;
      var name = Escape(cultureInfo.Name);
      var nativeName = Escape(cultureInfo.NativeName);
      sb.AppendLine($"  {{{cultureType}, \"{displayName}\", \"{englishName}\", {keyboardLayoutId}, {lcid}, \"{name}\", \"{nativeName}\"}},");
      Console.WriteLine($"  * \"{englishName}\" culture added");
    }
    sb.AppendLine("};");

    File.WriteAllText(Path.Combine(new []{"..", "..", "..", "..", "..", "src", "xtd.core", "src", "xtd", "globalization", "culture_info_cultures.cpp"}), sb.ToString(), Encoding.UTF8);
    Console.WriteLine($"Generation ended");
  }

  static string Escape(string text) => text.Replace("\\", "\\\\").Replace("\"", "\\\"");

  static string ToString(CultureTypes type) {
    var result = string.Empty;
    if (type.HasFlag(CultureTypes.NeutralCultures)) result+= (string.IsNullOrEmpty(result) ? "" : " | ") + "globalization::culture_types::neutral_cultures";
    if (type.HasFlag(CultureTypes.SpecificCultures)) result += (string.IsNullOrEmpty(result) ? "" : " | ") + "globalization::culture_types::specific_cultures";
    if (type.HasFlag(CultureTypes.InstalledWin32Cultures)) result += (string.IsNullOrEmpty(result) ? "" : " | ") + "globalization::culture_types::installed_win32_cultures";
    return result;
  }
}
