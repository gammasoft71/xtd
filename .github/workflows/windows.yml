name: Windows

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]
  workflow_dispatch:
    branches: [ master ]

jobs:
  build:
    name: Build on Windows (${{ matrix.arch }}) ${{ matrix.build_type }}
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [Win32, x64]
        build_type: [Debug, Release]

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Show CMake version
      run: cmake --version

    - name: Set triplet variable
      id: set-triplet
      run: |
        if ("${{ matrix.arch }}" -eq "Win32") {
          echo "triplet=x86-windows" >> $env:GITHUB_OUTPUT
        } else {
          echo "triplet=x64-windows" >> $env:GITHUB_OUTPUT
        }

    - name: Clone and bootstrap vcpkg
      run: |
        git clone https://github.com/microsoft/vcpkg.git
        cd vcpkg
        .\bootstrap-vcpkg.bat

    - name: Install wxWidgets with vcpkg
      run: |
        .\vcpkg\vcpkg.exe install wxwidgets:${{ steps.set-triplet.outputs.triplet }}

    - name: Configuring CMake
      run: |
        mkdir build-${{ matrix.arch }}-${{ matrix.build_type }}
        cd build-${{ matrix.arch }}-${{ matrix.build_type }}
        cmake .. `
          -G "Visual Studio 17 2022" `
          -A ${{ matrix.arch }} `
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} `
          -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}\vcpkg\scripts\buildsystems\vcpkg.cmake `
          -DXTD_BUILD_CPP_STANDARD=23 `
          -DXTD_BUILD_WITH_CONTINUOUS_INTEGRATION_SYSTEM=ON `
          -DXTD_BUILD_TESTS_XTD_CORE=ON `
          -DXTD_BUILD_TESTS_XTD_DRAWING=ON `
          -DXTD_BUILD_TESTS_XTD_FORMS=OFF `
          -DXTD_BUILD_TESTS_XTD_TUNIT=ON

    - name: Building xtd
      run: cmake --build build-${{ matrix.arch }}-${{ matrix.build_type }} --config ${{ matrix.build_type }}

    - name: Installing xtd
      run: cmake --build build-${{ matrix.arch }}-${{ matrix.build_type }} --config ${{ matrix.build_type }} --target install
          
    - name: List build-${{ matrix.arch }}-${{ matrix.build_type }}\tests\xtd.drawing.unit_tests\${{ matrix.build_type }} files
      run: |
        cd build-${{ matrix.arch }}-${{ matrix.build_type }}\tests\xtd.drawing.unit_tests\${{ matrix.build_type }}\
        dir
          
    - name: List build-${{ matrix.arch }}-${{ matrix.build_type }}\tests\xtd.drawing.unit_tests\${{ matrix.build_type }}\Resources files
      run: |
        cd build-${{ matrix.arch }}-${{ matrix.build_type }}\tests\xtd.drawing.unit_tests\${{ matrix.build_type }}\Resources\
        dir
          
    - name: Running xtd unit tests
      run: |
        cd build-${{ matrix.arch }}-${{ matrix.build_type }}
        ctest --output-on-failure --build-config ${{ matrix.build_type }}
