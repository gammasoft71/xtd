/// @file
/// @brief Contains xtd::forms::check_boxes factory.
/// @copyright Copyright (c) 2025 Gammasoft. All rights reserved.
#pragma once
#include "check_box.hpp"

/// @brief The xtd namespace contains all fundamental classes to access Hardware, Os, System, and more.
namespace xtd {
  /// @brief The xtd::forms namespace contains classes for creating Windows-based applications that take full advantage of the rich user interface features available in the Microsoft Windows operating system, Apple macOS and Linux like Ubuntu operating system.
  namespace forms {
    /// @brief Provides a collection of check_box objects for use by a Windows Forms application.
    /// @par Header
    /// ```cpp
    /// #include <xtd/forms/check_boxes>
    /// ```
    /// @par Namespace
    /// xtd::forms
    /// @par Library
    /// xtd.forms
    /// @ingroup xtd_forms controls
    /// @par Examples
    /// The following code example demonstrates the use of check_boxes control factory.
    /// @include check_boxes.cpp
    class check_boxes final static_ {
    public:
      /// @name Public Static Methods
      
      /// @{
      /// @brief Create a system-defined check_box that represent abort check_box.
      /// @return The created check_box.
      static check_box abort();
      /// @brief Create a system-defined check_box that represent abort check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box abort(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent abort check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box abort(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent abort check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box abort(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent abort check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box abort(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent abort check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box abort(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent abort check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box abort(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent abort check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box abort(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent abort check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box abort(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent abort check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box abort(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent abort check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box abort(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent abort check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box abort(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent abort check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box abort(const control& parent);
      /// @brief Create a system-defined check_box that represent abort check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box abort(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent abort check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box abort(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent abort check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box abort(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent abort check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box abort(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent abort check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box abort(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent abort check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box abort(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent abort check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box abort(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent abort check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box abort(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent abort check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box abort(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent abort check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box abort(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent abort check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box abort(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent about check_box.
      /// @return The created check_box.
      static check_box about();
      /// @brief Create a system-defined check_box that represent about check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box about(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent about check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box about(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent about check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box about(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent about check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box about(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent about check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box about(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent about check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box about(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent about check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box about(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent about check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box about(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent about check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box about(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent about check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box about(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent about check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box about(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent about check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box about(const control& parent);
      /// @brief Create a system-defined check_box that represent about check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box about(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent about check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box about(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent about check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box about(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent about check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box about(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent about check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box about(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent about check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box about(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent about check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box about(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent about check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box about(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent about check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box about(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent about check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box about(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent about check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box about(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent actual_size check_box.
      /// @return The created check_box.
      static check_box actual_size();
      /// @brief Create a system-defined check_box that represent actual_size check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box actual_size(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent actual_size check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box actual_size(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent actual_size check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box actual_size(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent actual_size check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box actual_size(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent actual_size check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box actual_size(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent actual_size check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box actual_size(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent actual_size check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box actual_size(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent actual_size check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box actual_size(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent actual_size check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box actual_size(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent actual_size check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box actual_size(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent actual_size check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box actual_size(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent actual_size check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box actual_size(const control& parent);
      /// @brief Create a system-defined check_box that represent actual_size check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box actual_size(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent actual_size check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box actual_size(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent actual_size check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box actual_size(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent actual_size check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box actual_size(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent actual_size check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box actual_size(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent actual_size check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box actual_size(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent actual_size check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box actual_size(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent actual_size check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box actual_size(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent actual_size check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box actual_size(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent actual_size check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box actual_size(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent actual_size check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box actual_size(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent add check_box.
      /// @return The created check_box.
      static check_box add();
      /// @brief Create a system-defined check_box that represent add check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box add(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent add check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box add(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent add check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box add(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent add check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box add(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent add check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box add(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent add check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box add(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent add check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box add(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent add check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box add(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent add check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box add(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent add check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box add(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent add check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box add(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent add check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box add(const control& parent);
      /// @brief Create a system-defined check_box that represent add check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box add(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent add check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box add(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent add check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box add(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent add check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box add(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent add check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box add(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent add check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box add(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent add check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box add(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent add check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box add(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent add check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box add(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent add check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box add(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent add check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box add(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent alignment check_box.
      /// @return The created check_box.
      static check_box alignment();
      /// @brief Create a system-defined check_box that represent alignment check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box alignment(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent alignment check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box alignment(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent alignment check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box alignment(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent alignment check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box alignment(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent alignment check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box alignment(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent alignment check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box alignment(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent alignment check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box alignment(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent alignment check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box alignment(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent alignment check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box alignment(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent alignment check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box alignment(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent alignment check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box alignment(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent alignment check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box alignment(const control& parent);
      /// @brief Create a system-defined check_box that represent alignment check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box alignment(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent alignment check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box alignment(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent alignment check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box alignment(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent alignment check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box alignment(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent alignment check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box alignment(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent alignment check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box alignment(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent alignment check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box alignment(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent alignment check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box alignment(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent alignment check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box alignment(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent alignment check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box alignment(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent alignment check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box alignment(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent align_left check_box.
      /// @return The created check_box.
      static check_box align_left();
      /// @brief Create a system-defined check_box that represent align_left check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box align_left(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent align_left check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box align_left(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent align_left check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box align_left(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent align_left check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box align_left(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent align_left check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box align_left(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent align_left check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box align_left(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent align_left check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box align_left(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent align_left check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box align_left(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent align_left check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box align_left(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent align_left check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box align_left(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent align_left check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box align_left(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent align_left check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box align_left(const control& parent);
      /// @brief Create a system-defined check_box that represent align_left check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box align_left(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent align_left check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box align_left(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent align_left check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box align_left(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent align_left check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box align_left(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent align_left check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box align_left(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent align_left check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box align_left(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent align_left check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box align_left(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent align_left check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box align_left(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent align_left check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box align_left(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent align_left check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box align_left(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent align_left check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box align_left(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent align_right check_box.
      /// @return The created check_box.
      static check_box align_right();
      /// @brief Create a system-defined check_box that represent align_right check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box align_right(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent align_right check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box align_right(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent align_right check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box align_right(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent align_right check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box align_right(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent align_right check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box align_right(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent align_right check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box align_right(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent align_right check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box align_right(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent align_right check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box align_right(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent align_right check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box align_right(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent align_right check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box align_right(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent align_right check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box align_right(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent align_right check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box align_right(const control& parent);
      /// @brief Create a system-defined check_box that represent align_right check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box align_right(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent align_right check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box align_right(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent align_right check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box align_right(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent align_right check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box align_right(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent align_right check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box align_right(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent align_right check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box align_right(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent align_right check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box align_right(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent align_right check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box align_right(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent align_right check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box align_right(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent align_right check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box align_right(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent align_right check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box align_right(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent apply check_box.
      /// @return The created check_box.
      static check_box apply();
      /// @brief Create a system-defined check_box that represent apply check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box apply(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent apply check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box apply(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent apply check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box apply(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent apply check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box apply(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent apply check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box apply(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent apply check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box apply(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent apply check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box apply(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent apply check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box apply(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent apply check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box apply(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent apply check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box apply(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent apply check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box apply(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent apply check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box apply(const control& parent);
      /// @brief Create a system-defined check_box that represent apply check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box apply(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent apply check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box apply(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent apply check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box apply(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent apply check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box apply(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent apply check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box apply(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent apply check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box apply(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent apply check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box apply(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent apply check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box apply(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent apply check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box apply(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent apply check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box apply(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent apply check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box apply(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent ascending check_box.
      /// @return The created check_box.
      static check_box ascending();
      /// @brief Create a system-defined check_box that represent ascending check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box ascending(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent ascending check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box ascending(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent ascending check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box ascending(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent ascending check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box ascending(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent ascending check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box ascending(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent ascending check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box ascending(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent ascending check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box ascending(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent ascending check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box ascending(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent ascending check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box ascending(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent ascending check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box ascending(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent ascending check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box ascending(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent ascending check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box ascending(const control& parent);
      /// @brief Create a system-defined check_box that represent ascending check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box ascending(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent ascending check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box ascending(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent ascending check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box ascending(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent ascending check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box ascending(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent ascending check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box ascending(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent ascending check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box ascending(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent ascending check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box ascending(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent ascending check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box ascending(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent ascending check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box ascending(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent ascending check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box ascending(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent ascending check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box ascending(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent back check_box.
      /// @return The created check_box.
      static check_box back();
      /// @brief Create a system-defined check_box that represent back check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box back(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent back check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box back(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent back check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box back(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent back check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box back(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent back check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box back(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent back check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box back(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent back check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box back(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent back check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box back(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent back check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box back(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent back check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box back(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent back check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box back(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent back check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box back(const control& parent);
      /// @brief Create a system-defined check_box that represent back check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box back(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent back check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box back(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent back check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box back(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent back check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box back(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent back check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box back(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent back check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box back(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent back check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box back(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent back check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box back(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent back check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box back(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent back check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box back(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent back check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box back(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent bold check_box.
      /// @return The created check_box.
      static check_box bold();
      /// @brief Create a system-defined check_box that represent bold check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box bold(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent bold check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box bold(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent bold check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box bold(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent bold check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box bold(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent bold check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box bold(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent bold check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box bold(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent bold check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box bold(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent bold check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box bold(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent bold check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box bold(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent bold check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box bold(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent bold check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box bold(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent bold check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box bold(const control& parent);
      /// @brief Create a system-defined check_box that represent bold check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box bold(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent bold check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box bold(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent bold check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box bold(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent bold check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box bold(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent bold check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box bold(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent bold check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box bold(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent bold check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box bold(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent bold check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box bold(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent bold check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box bold(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent bold check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box bold(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent bold check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box bold(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent bottom check_box.
      /// @return The created check_box.
      static check_box bottom();
      /// @brief Create a system-defined check_box that represent bottom check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box bottom(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent bottom check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box bottom(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent bottom check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box bottom(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent bottom check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box bottom(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent bottom check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box bottom(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent bottom check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box bottom(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent bottom check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box bottom(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent bottom check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box bottom(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent bottom check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box bottom(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent bottom check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box bottom(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent bottom check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box bottom(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent bottom check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box bottom(const control& parent);
      /// @brief Create a system-defined check_box that represent bottom check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box bottom(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent bottom check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box bottom(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent bottom check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box bottom(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent bottom check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box bottom(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent bottom check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box bottom(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent bottom check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box bottom(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent bottom check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box bottom(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent bottom check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box bottom(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent bottom check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box bottom(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent bottom check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box bottom(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent bottom check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box bottom(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent cancel check_box.
      /// @return The created check_box.
      static check_box cancel();
      /// @brief Create a system-defined check_box that represent cancel check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box cancel(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent cancel check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box cancel(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent cancel check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box cancel(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent cancel check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box cancel(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent cancel check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box cancel(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent cancel check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box cancel(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent cancel check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box cancel(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent cancel check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box cancel(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent cancel check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box cancel(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent cancel check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box cancel(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent cancel check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box cancel(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent cancel check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box cancel(const control& parent);
      /// @brief Create a system-defined check_box that represent cancel check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box cancel(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent cancel check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box cancel(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent cancel check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box cancel(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent cancel check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box cancel(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent cancel check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box cancel(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent cancel check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box cancel(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent cancel check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box cancel(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent cancel check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box cancel(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent cancel check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box cancel(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent cancel check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box cancel(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent cancel check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box cancel(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent cdrom check_box.
      /// @return The created check_box.
      static check_box cdrom();
      /// @brief Create a system-defined check_box that represent cdrom check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box cdrom(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent cdrom check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box cdrom(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent cdrom check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box cdrom(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent cdrom check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box cdrom(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent cdrom check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box cdrom(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent cdrom check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box cdrom(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent cdrom check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box cdrom(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent cdrom check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box cdrom(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent cdrom check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box cdrom(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent cdrom check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box cdrom(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent cdrom check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box cdrom(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent cdrom check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box cdrom(const control& parent);
      /// @brief Create a system-defined check_box that represent cdrom check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box cdrom(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent cdrom check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box cdrom(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent cdrom check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box cdrom(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent cdrom check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box cdrom(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent cdrom check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box cdrom(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent cdrom check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box cdrom(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent cdrom check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box cdrom(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent cdrom check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box cdrom(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent cdrom check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box cdrom(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent cdrom check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box cdrom(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent cdrom check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box cdrom(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent centered check_box.
      /// @return The created check_box.
      static check_box centered();
      /// @brief Create a system-defined check_box that represent centered check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box centered(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent centered check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box centered(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent centered check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box centered(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent centered check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box centered(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent centered check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box centered(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent centered check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box centered(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent centered check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box centered(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent centered check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box centered(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent centered check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box centered(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent centered check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box centered(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent centered check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box centered(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent centered check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box centered(const control& parent);
      /// @brief Create a system-defined check_box that represent centered check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box centered(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent centered check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box centered(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent centered check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box centered(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent centered check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box centered(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent centered check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box centered(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent centered check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box centered(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent centered check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box centered(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent centered check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box centered(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent centered check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box centered(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent centered check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box centered(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent centered check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box centered(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent clear check_box.
      /// @return The created check_box.
      static check_box clear();
      /// @brief Create a system-defined check_box that represent clear check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box clear(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent clear check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box clear(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent clear check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box clear(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent clear check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box clear(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent clear check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box clear(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent clear check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box clear(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent clear check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box clear(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent clear check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box clear(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent clear check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box clear(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent clear check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box clear(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent clear check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box clear(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent clear check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box clear(const control& parent);
      /// @brief Create a system-defined check_box that represent clear check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box clear(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent clear check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box clear(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent clear check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box clear(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent clear check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box clear(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent clear check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box clear(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent clear check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box clear(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent clear check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box clear(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent clear check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box clear(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent clear check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box clear(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent clear check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box clear(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent clear check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box clear(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent close check_box.
      /// @return The created check_box.
      static check_box close();
      /// @brief Create a system-defined check_box that represent close check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box close(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent close check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box close(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent close check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box close(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent close check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box close(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent close check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box close(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent close check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box close(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent close check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box close(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent close check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box close(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent close check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box close(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent close check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box close(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent close check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box close(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent close check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box close(const control& parent);
      /// @brief Create a system-defined check_box that represent close check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box close(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent close check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box close(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent close check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box close(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent close check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box close(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent close check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box close(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent close check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box close(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent close check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box close(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent close check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box close(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent close check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box close(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent close check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box close(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent close check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box close(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent color check_box.
      /// @return The created check_box.
      static check_box color();
      /// @brief Create a system-defined check_box that represent color check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box color(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent color check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box color(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent color check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box color(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent color check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box color(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent color check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box color(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent color check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box color(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent color check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box color(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent color check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box color(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent color check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box color(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent color check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box color(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent color check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box color(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent color check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box color(const control& parent);
      /// @brief Create a system-defined check_box that represent color check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box color(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent color check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box color(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent color check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box color(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent color check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box color(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent color check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box color(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent color check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box color(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent color check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box color(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent color check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box color(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent color check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box color(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent color check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box color(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent color check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box color(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent contents check_box.
      /// @return The created check_box.
      static check_box contents();
      /// @brief Create a system-defined check_box that represent contents check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box contents(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent contents check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box contents(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent contents check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box contents(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent contents check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box contents(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent contents check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box contents(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent contents check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box contents(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent contents check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box contents(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent contents check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box contents(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent contents check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box contents(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent contents check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box contents(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent contents check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box contents(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent contents check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box contents(const control& parent);
      /// @brief Create a system-defined check_box that represent contents check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box contents(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent contents check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box contents(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent contents check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box contents(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent contents check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box contents(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent contents check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box contents(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent contents check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box contents(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent contents check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box contents(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent contents check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box contents(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent contents check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box contents(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent contents check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box contents(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent contents check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box contents(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent convert check_box.
      /// @return The created check_box.
      static check_box convert();
      /// @brief Create a system-defined check_box that represent convert check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box convert(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent convert check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box convert(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent convert check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box convert(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent convert check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box convert(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent convert check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box convert(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent convert check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box convert(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent convert check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box convert(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent convert check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box convert(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent convert check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box convert(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent convert check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box convert(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent convert check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box convert(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent convert check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box convert(const control& parent);
      /// @brief Create a system-defined check_box that represent convert check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box convert(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent convert check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box convert(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent convert check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box convert(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent convert check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box convert(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent convert check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box convert(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent convert check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box convert(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent convert check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box convert(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent convert check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box convert(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent convert check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box convert(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent convert check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box convert(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent convert check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box convert(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent copy check_box.
      /// @return The created check_box.
      static check_box copy();
      /// @brief Create a system-defined check_box that represent copy check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box copy(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent copy check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box copy(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent copy check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box copy(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent copy check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box copy(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent copy check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box copy(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent copy check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box copy(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent copy check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box copy(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent copy check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box copy(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent copy check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box copy(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent copy check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box copy(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent copy check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box copy(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent copy check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box copy(const control& parent);
      /// @brief Create a system-defined check_box that represent copy check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box copy(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent copy check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box copy(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent copy check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box copy(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent copy check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box copy(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent copy check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box copy(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent copy check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box copy(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent copy check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box copy(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent copy check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box copy(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent copy check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box copy(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent copy check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box copy(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent copy check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box copy(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent customize check_box.
      /// @return The created check_box.
      static check_box customize();
      /// @brief Create a system-defined check_box that represent customize check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box customize(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent customize check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box customize(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent customize check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box customize(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent customize check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box customize(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent customize check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box customize(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent customize check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box customize(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent customize check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box customize(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent customize check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box customize(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent customize check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box customize(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent customize check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box customize(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent customize check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box customize(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent customize check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box customize(const control& parent);
      /// @brief Create a system-defined check_box that represent customize check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box customize(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent customize check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box customize(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent customize check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box customize(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent customize check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box customize(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent customize check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box customize(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent customize check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box customize(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent customize check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box customize(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent customize check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box customize(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent customize check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box customize(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent customize check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box customize(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent customize check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box customize(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent cut check_box.
      /// @return The created check_box.
      static check_box cut();
      /// @brief Create a system-defined check_box that represent cut check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box cut(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent cut check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box cut(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent cut check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box cut(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent cut check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box cut(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent cut check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box cut(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent cut check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box cut(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent cut check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box cut(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent cut check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box cut(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent cut check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box cut(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent cut check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box cut(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent cut check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box cut(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent cut check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box cut(const control& parent);
      /// @brief Create a system-defined check_box that represent cut check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box cut(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent cut check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box cut(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent cut check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box cut(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent cut check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box cut(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent cut check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box cut(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent cut check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box cut(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent cut check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box cut(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent cut check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box cut(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent cut check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box cut(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent cut check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box cut(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent cut check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box cut(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent del check_box.
      /// @return The created check_box.
      static check_box del();
      /// @brief Create a system-defined check_box that represent del check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box del(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent del check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box del(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent del check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box del(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent del check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box del(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent del check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box del(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent del check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box del(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent del check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box del(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent del check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box del(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent del check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box del(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent del check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box del(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent del check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box del(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent del check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box del(const control& parent);
      /// @brief Create a system-defined check_box that represent del check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box del(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent del check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box del(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent del check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box del(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent del check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box del(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent del check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box del(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent del check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box del(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent del check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box del(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent del check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box del(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent del check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box del(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent del check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box del(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent del check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box del(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent descending check_box.
      /// @return The created check_box.
      static check_box descending();
      /// @brief Create a system-defined check_box that represent descending check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box descending(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent descending check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box descending(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent descending check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box descending(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent descending check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box descending(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent descending check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box descending(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent descending check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box descending(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent descending check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box descending(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent descending check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box descending(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent descending check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box descending(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent descending check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box descending(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent descending check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box descending(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent descending check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box descending(const control& parent);
      /// @brief Create a system-defined check_box that represent descending check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box descending(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent descending check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box descending(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent descending check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box descending(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent descending check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box descending(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent descending check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box descending(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent descending check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box descending(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent descending check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box descending(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent descending check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box descending(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent descending check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box descending(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent descending check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box descending(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent descending check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box descending(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent down check_box.
      /// @return The created check_box.
      static check_box down();
      /// @brief Create a system-defined check_box that represent down check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box down(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent down check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box down(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent down check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box down(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent down check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box down(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent down check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box down(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent down check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box down(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent down check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box down(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent down check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box down(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent down check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box down(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent down check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box down(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent down check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box down(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent down check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box down(const control& parent);
      /// @brief Create a system-defined check_box that represent down check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box down(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent down check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box down(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent down check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box down(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent down check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box down(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent down check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box down(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent down check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box down(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent down check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box down(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent down check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box down(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent down check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box down(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent down check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box down(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent down check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box down(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent edit check_box.
      /// @return The created check_box.
      static check_box edit();
      /// @brief Create a system-defined check_box that represent edit check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box edit(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent edit check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box edit(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent edit check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box edit(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent edit check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box edit(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent edit check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box edit(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent edit check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box edit(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent edit check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box edit(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent edit check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box edit(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent edit check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box edit(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent edit check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box edit(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent edit check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box edit(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent edit check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box edit(const control& parent);
      /// @brief Create a system-defined check_box that represent edit check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box edit(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent edit check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box edit(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent edit check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box edit(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent edit check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box edit(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent edit check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box edit(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent edit check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box edit(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent edit check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box edit(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent edit check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box edit(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent edit check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box edit(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent edit check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box edit(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent edit check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box edit(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent execute check_box.
      /// @return The created check_box.
      static check_box execute();
      /// @brief Create a system-defined check_box that represent execute check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box execute(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent execute check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box execute(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent execute check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box execute(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent execute check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box execute(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent execute check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box execute(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent execute check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box execute(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent execute check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box execute(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent execute check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box execute(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent execute check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box execute(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent execute check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box execute(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent execute check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box execute(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent execute check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box execute(const control& parent);
      /// @brief Create a system-defined check_box that represent execute check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box execute(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent execute check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box execute(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent execute check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box execute(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent execute check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box execute(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent execute check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box execute(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent execute check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box execute(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent execute check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box execute(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent execute check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box execute(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent execute check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box execute(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent execute check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box execute(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent execute check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box execute(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent exit check_box.
      /// @return The created check_box.
      static check_box exit();
      /// @brief Create a system-defined check_box that represent exit check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box exit(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent exit check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box exit(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent exit check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box exit(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent exit check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box exit(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent exit check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box exit(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent exit check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box exit(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent exit check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box exit(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent exit check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box exit(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent exit check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box exit(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent exit check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box exit(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent exit check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box exit(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent exit check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box exit(const control& parent);
      /// @brief Create a system-defined check_box that represent exit check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box exit(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent exit check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box exit(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent exit check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box exit(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent exit check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box exit(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent exit check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box exit(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent exit check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box exit(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent exit check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box exit(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent exit check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box exit(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent exit check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box exit(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent exit check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box exit(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent exit check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box exit(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent file check_box.
      /// @return The created check_box.
      static check_box file();
      /// @brief Create a system-defined check_box that represent file check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box file(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent file check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box file(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent file check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box file(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent file check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box file(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent file check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box file(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent file check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box file(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent file check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box file(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent file check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box file(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent file check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box file(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent file check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box file(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent file check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box file(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent file check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box file(const control& parent);
      /// @brief Create a system-defined check_box that represent file check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box file(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent file check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box file(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent file check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box file(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent file check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box file(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent file check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box file(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent file check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box file(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent file check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box file(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent file check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box file(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent file check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box file(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent file check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box file(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent file check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box file(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent find check_box.
      /// @return The created check_box.
      static check_box find();
      /// @brief Create a system-defined check_box that represent find check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box find(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent find check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box find(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent find check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box find(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent find check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box find(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent find check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box find(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent find check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box find(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent find check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box find(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent find check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box find(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent find check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box find(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent find check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box find(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent find check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box find(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent find check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box find(const control& parent);
      /// @brief Create a system-defined check_box that represent find check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box find(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent find check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box find(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent find check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box find(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent find check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box find(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent find check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box find(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent find check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box find(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent find check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box find(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent find check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box find(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent find check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box find(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent find check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box find(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent find check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box find(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent first check_box.
      /// @return The created check_box.
      static check_box first();
      /// @brief Create a system-defined check_box that represent first check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box first(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent first check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box first(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent first check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box first(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent first check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box first(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent first check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box first(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent first check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box first(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent first check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box first(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent first check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box first(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent first check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box first(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent first check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box first(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent first check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box first(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent first check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box first(const control& parent);
      /// @brief Create a system-defined check_box that represent first check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box first(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent first check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box first(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent first check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box first(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent first check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box first(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent first check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box first(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent first check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box first(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent first check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box first(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent first check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box first(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent first check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box first(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent first check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box first(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent first check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box first(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent floppy check_box.
      /// @return The created check_box.
      static check_box floppy();
      /// @brief Create a system-defined check_box that represent floppy check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box floppy(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent floppy check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box floppy(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent floppy check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box floppy(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent floppy check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box floppy(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent floppy check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box floppy(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent floppy check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box floppy(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent floppy check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box floppy(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent floppy check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box floppy(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent floppy check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box floppy(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent floppy check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box floppy(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent floppy check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box floppy(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent floppy check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box floppy(const control& parent);
      /// @brief Create a system-defined check_box that represent floppy check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box floppy(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent floppy check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box floppy(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent floppy check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box floppy(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent floppy check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box floppy(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent floppy check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box floppy(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent floppy check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box floppy(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent floppy check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box floppy(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent floppy check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box floppy(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent floppy check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box floppy(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent floppy check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box floppy(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent floppy check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box floppy(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent font check_box.
      /// @return The created check_box.
      static check_box font();
      /// @brief Create a system-defined check_box that represent font check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box font(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent font check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box font(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent font check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box font(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent font check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box font(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent font check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box font(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent font check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box font(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent font check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box font(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent font check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box font(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent font check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box font(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent font check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box font(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent font check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box font(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent font check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box font(const control& parent);
      /// @brief Create a system-defined check_box that represent font check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box font(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent font check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box font(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent font check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box font(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent font check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box font(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent font check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box font(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent font check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box font(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent font check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box font(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent font check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box font(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent font check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box font(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent font check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box font(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent font check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box font(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent forward check_box.
      /// @return The created check_box.
      static check_box forward();
      /// @brief Create a system-defined check_box that represent forward check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box forward(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent forward check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box forward(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent forward check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box forward(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent forward check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box forward(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent forward check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box forward(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent forward check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box forward(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent forward check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box forward(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent forward check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box forward(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent forward check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box forward(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent forward check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box forward(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent forward check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box forward(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent forward check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box forward(const control& parent);
      /// @brief Create a system-defined check_box that represent forward check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box forward(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent forward check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box forward(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent forward check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box forward(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent forward check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box forward(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent forward check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box forward(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent forward check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box forward(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent forward check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box forward(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent forward check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box forward(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent forward check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box forward(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent forward check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box forward(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent forward check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box forward(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent harddisk check_box.
      /// @return The created check_box.
      static check_box harddisk();
      /// @brief Create a system-defined check_box that represent harddisk check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box harddisk(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent harddisk check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box harddisk(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent harddisk check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box harddisk(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent harddisk check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box harddisk(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent harddisk check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box harddisk(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent harddisk check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box harddisk(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent harddisk check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box harddisk(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent harddisk check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box harddisk(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent harddisk check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box harddisk(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent harddisk check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box harddisk(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent harddisk check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box harddisk(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent harddisk check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box harddisk(const control& parent);
      /// @brief Create a system-defined check_box that represent harddisk check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box harddisk(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent harddisk check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box harddisk(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent harddisk check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box harddisk(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent harddisk check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box harddisk(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent harddisk check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box harddisk(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent harddisk check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box harddisk(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent harddisk check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box harddisk(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent harddisk check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box harddisk(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent harddisk check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box harddisk(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent harddisk check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box harddisk(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent harddisk check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box harddisk(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent help check_box.
      /// @return The created check_box.
      static check_box help();
      /// @brief Create a system-defined check_box that represent help check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box help(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent help check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box help(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent help check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box help(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent help check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box help(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent help check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box help(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent help check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box help(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent help check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box help(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent help check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box help(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent help check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box help(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent help check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box help(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent help check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box help(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent help check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box help(const control& parent);
      /// @brief Create a system-defined check_box that represent help check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box help(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent help check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box help(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent help check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box help(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent help check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box help(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent help check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box help(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent help check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box help(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent help check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box help(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent help check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box help(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent help check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box help(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent help check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box help(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent help check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box help(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent home check_box.
      /// @return The created check_box.
      static check_box home();
      /// @brief Create a system-defined check_box that represent home check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box home(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent home check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box home(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent home check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box home(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent home check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box home(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent home check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box home(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent home check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box home(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent home check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box home(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent home check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box home(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent home check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box home(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent home check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box home(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent home check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box home(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent home check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box home(const control& parent);
      /// @brief Create a system-defined check_box that represent home check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box home(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent home check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box home(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent home check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box home(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent home check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box home(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent home check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box home(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent home check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box home(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent home check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box home(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent home check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box home(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent home check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box home(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent home check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box home(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent home check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box home(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent ignore check_box.
      /// @return The created check_box.
      static check_box ignore();
      /// @brief Create a system-defined check_box that represent ignore check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box ignore(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent ignore check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box ignore(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent ignore check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box ignore(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent ignore check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box ignore(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent ignore check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box ignore(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent ignore check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box ignore(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent ignore check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box ignore(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent ignore check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box ignore(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent ignore check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box ignore(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent ignore check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box ignore(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent ignore check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box ignore(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent ignore check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box ignore(const control& parent);
      /// @brief Create a system-defined check_box that represent ignore check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box ignore(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent ignore check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box ignore(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent ignore check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box ignore(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent ignore check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box ignore(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent ignore check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box ignore(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent ignore check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box ignore(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent ignore check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box ignore(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent ignore check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box ignore(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent ignore check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box ignore(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent ignore check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box ignore(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent ignore check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box ignore(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent indent check_box.
      /// @return The created check_box.
      static check_box indent();
      /// @brief Create a system-defined check_box that represent indent check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box indent(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent indent check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box indent(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent indent check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box indent(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent indent check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box indent(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent indent check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box indent(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent indent check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box indent(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent indent check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box indent(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent indent check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box indent(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent indent check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box indent(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent indent check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box indent(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent indent check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box indent(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent indent check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box indent(const control& parent);
      /// @brief Create a system-defined check_box that represent indent check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box indent(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent indent check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box indent(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent indent check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box indent(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent indent check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box indent(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent indent check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box indent(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent indent check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box indent(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent indent check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box indent(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent indent check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box indent(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent indent check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box indent(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent indent check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box indent(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent indent check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box indent(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent index check_box.
      /// @return The created check_box.
      static check_box index();
      /// @brief Create a system-defined check_box that represent index check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box index(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent index check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box index(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent index check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box index(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent index check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box index(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent index check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box index(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent index check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box index(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent index check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box index(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent index check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box index(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent index check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box index(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent index check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box index(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent index check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box index(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent index check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box index(const control& parent);
      /// @brief Create a system-defined check_box that represent index check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box index(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent index check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box index(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent index check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box index(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent index check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box index(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent index check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box index(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent index check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box index(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent index check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box index(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent index check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box index(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent index check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box index(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent index check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box index(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent index check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box index(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent info check_box.
      /// @return The created check_box.
      static check_box info();
      /// @brief Create a system-defined check_box that represent info check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box info(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent info check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box info(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent info check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box info(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent info check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box info(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent info check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box info(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent info check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box info(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent info check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box info(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent info check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box info(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent info check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box info(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent info check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box info(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent info check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box info(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent info check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box info(const control& parent);
      /// @brief Create a system-defined check_box that represent info check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box info(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent info check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box info(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent info check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box info(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent info check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box info(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent info check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box info(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent info check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box info(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent info check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box info(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent info check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box info(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent info check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box info(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent info check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box info(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent info check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box info(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent italic check_box.
      /// @return The created check_box.
      static check_box italic();
      /// @brief Create a system-defined check_box that represent italic check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box italic(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent italic check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box italic(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent italic check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box italic(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent italic check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box italic(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent italic check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box italic(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent italic check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box italic(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent italic check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box italic(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent italic check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box italic(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent italic check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box italic(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent italic check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box italic(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent italic check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box italic(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent italic check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box italic(const control& parent);
      /// @brief Create a system-defined check_box that represent italic check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box italic(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent italic check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box italic(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent italic check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box italic(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent italic check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box italic(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent italic check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box italic(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent italic check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box italic(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent italic check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box italic(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent italic check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box italic(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent italic check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box italic(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent italic check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box italic(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent italic check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box italic(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent justified check_box.
      /// @return The created check_box.
      static check_box justified();
      /// @brief Create a system-defined check_box that represent justified check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box justified(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent justified check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box justified(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent justified check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box justified(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent justified check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box justified(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent justified check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box justified(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent justified check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box justified(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent justified check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box justified(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent justified check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box justified(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent justified check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box justified(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent justified check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box justified(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent justified check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box justified(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent justified check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box justified(const control& parent);
      /// @brief Create a system-defined check_box that represent justified check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box justified(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent justified check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box justified(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent justified check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box justified(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent justified check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box justified(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent justified check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box justified(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent justified check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box justified(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent justified check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box justified(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent justified check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box justified(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent justified check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box justified(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent justified check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box justified(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent justified check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box justified(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent jump_to check_box.
      /// @return The created check_box.
      static check_box jump_to();
      /// @brief Create a system-defined check_box that represent jump_to check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box jump_to(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent jump_to check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box jump_to(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent jump_to check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box jump_to(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent jump_to check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box jump_to(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent jump_to check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box jump_to(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent jump_to check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box jump_to(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent jump_to check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box jump_to(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent jump_to check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box jump_to(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent jump_to check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box jump_to(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent jump_to check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box jump_to(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent jump_to check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box jump_to(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent jump_to check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box jump_to(const control& parent);
      /// @brief Create a system-defined check_box that represent jump_to check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box jump_to(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent jump_to check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box jump_to(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent jump_to check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box jump_to(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent jump_to check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box jump_to(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent jump_to check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box jump_to(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent jump_to check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box jump_to(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent jump_to check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box jump_to(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent jump_to check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box jump_to(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent jump_to check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box jump_to(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent jump_to check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box jump_to(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent jump_to check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box jump_to(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent last check_box.
      /// @return The created check_box.
      static check_box last();
      /// @brief Create a system-defined check_box that represent last check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box last(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent last check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box last(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent last check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box last(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent last check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box last(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent last check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box last(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent last check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box last(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent last check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box last(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent last check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box last(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent last check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box last(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent last check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box last(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent last check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box last(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent last check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box last(const control& parent);
      /// @brief Create a system-defined check_box that represent last check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box last(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent last check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box last(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent last check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box last(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent last check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box last(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent last check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box last(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent last check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box last(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent last check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box last(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent last check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box last(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent last check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box last(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent last check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box last(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent last check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box last(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent network check_box.
      /// @return The created check_box.
      static check_box network();
      /// @brief Create a system-defined check_box that represent network check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box network(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent network check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box network(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent network check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box network(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent network check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box network(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent network check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box network(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent network check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box network(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent network check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box network(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent network check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box network(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent network check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box network(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent network check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box network(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent network check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box network(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent network check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box network(const control& parent);
      /// @brief Create a system-defined check_box that represent network check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box network(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent network check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box network(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent network check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box network(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent network check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box network(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent network check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box network(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent network check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box network(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent network check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box network(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent network check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box network(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent network check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box network(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent network check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box network(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent network check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box network(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent new_ check_box.
      /// @return The created check_box.
      static check_box new_();
      /// @brief Create a system-defined check_box that represent new_ check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box new_(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent new_ check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box new_(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent new_ check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box new_(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent new_ check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box new_(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent new_ check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box new_(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent new_ check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box new_(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent new_ check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box new_(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent new_ check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box new_(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent new_ check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box new_(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent new_ check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box new_(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent new_ check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box new_(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent new_ check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box new_(const control& parent);
      /// @brief Create a system-defined check_box that represent new_ check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box new_(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent new_ check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box new_(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent new_ check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box new_(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent new_ check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box new_(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent new_ check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box new_(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent new_ check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box new_(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent new_ check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box new_(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent new_ check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box new_(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent new_ check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box new_(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent new_ check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box new_(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent new_ check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box new_(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent next check_box.
      /// @return The created check_box.
      static check_box next();
      /// @brief Create a system-defined check_box that represent next check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box next(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent next check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box next(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent next check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box next(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent next check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box next(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent next check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box next(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent next check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box next(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent next check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box next(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent next check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box next(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent next check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box next(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent next check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box next(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent next check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box next(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent next check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box next(const control& parent);
      /// @brief Create a system-defined check_box that represent next check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box next(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent next check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box next(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent next check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box next(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent next check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box next(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent next check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box next(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent next check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box next(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent next check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box next(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent next check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box next(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent next check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box next(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent next check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box next(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent next check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box next(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent no check_box.
      /// @return The created check_box.
      static check_box no();
      /// @brief Create a system-defined check_box that represent no check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box no(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent no check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box no(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent no check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box no(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent no check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box no(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent no check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box no(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent no check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box no(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent no check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box no(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent no check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box no(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent no check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box no(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent no check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box no(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent no check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box no(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent no check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box no(const control& parent);
      /// @brief Create a system-defined check_box that represent no check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box no(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent no check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box no(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent no check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box no(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent no check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box no(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent no check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box no(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent no check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box no(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent no check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box no(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent no check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box no(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent no check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box no(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent no check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box no(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent no check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box no(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent ok check_box.
      /// @return The created check_box.
      static check_box ok();
      /// @brief Create a system-defined check_box that represent ok check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box ok(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent ok check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box ok(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent ok check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box ok(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent ok check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box ok(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent ok check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box ok(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent ok check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box ok(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent ok check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box ok(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent ok check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box ok(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent ok check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box ok(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent ok check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box ok(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent ok check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box ok(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent ok check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box ok(const control& parent);
      /// @brief Create a system-defined check_box that represent ok check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box ok(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent ok check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box ok(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent ok check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box ok(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent ok check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box ok(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent ok check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box ok(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent ok check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box ok(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent ok check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box ok(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent ok check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box ok(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent ok check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box ok(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent ok check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box ok(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent ok check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box ok(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent open check_box.
      /// @return The created check_box.
      static check_box open();
      /// @brief Create a system-defined check_box that represent open check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box open(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent open check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box open(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent open check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box open(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent open check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box open(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent open check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box open(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent open check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box open(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent open check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box open(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent open check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box open(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent open check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box open(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent open check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box open(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent open check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box open(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent open check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box open(const control& parent);
      /// @brief Create a system-defined check_box that represent open check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box open(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent open check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box open(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent open check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box open(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent open check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box open(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent open check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box open(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent open check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box open(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent open check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box open(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent open check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box open(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent open check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box open(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent open check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box open(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent open check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box open(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent options check_box.
      /// @return The created check_box.
      static check_box options();
      /// @brief Create a system-defined check_box that represent options check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box options(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent options check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box options(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent options check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box options(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent options check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box options(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent options check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box options(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent options check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box options(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent options check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box options(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent options check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box options(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent options check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box options(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent options check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box options(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent options check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box options(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent options check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box options(const control& parent);
      /// @brief Create a system-defined check_box that represent options check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box options(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent options check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box options(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent options check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box options(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent options check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box options(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent options check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box options(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent options check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box options(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent options check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box options(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent options check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box options(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent options check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box options(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent options check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box options(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent options check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box options(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent paste check_box.
      /// @return The created check_box.
      static check_box paste();
      /// @brief Create a system-defined check_box that represent paste check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box paste(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent paste check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box paste(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent paste check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box paste(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent paste check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box paste(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent paste check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box paste(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent paste check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box paste(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent paste check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box paste(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent paste check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box paste(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent paste check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box paste(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent paste check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box paste(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent paste check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box paste(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent paste check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box paste(const control& parent);
      /// @brief Create a system-defined check_box that represent paste check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box paste(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent paste check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box paste(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent paste check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box paste(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent paste check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box paste(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent paste check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box paste(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent paste check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box paste(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent paste check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box paste(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent paste check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box paste(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent paste check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box paste(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent paste check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box paste(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent paste check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box paste(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent preferences check_box.
      /// @return The created check_box.
      static check_box preferences();
      /// @brief Create a system-defined check_box that represent preferences check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box preferences(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent preferences check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box preferences(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent preferences check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box preferences(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent preferences check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box preferences(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent preferences check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box preferences(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent preferences check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box preferences(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent preferences check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box preferences(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent preferences check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box preferences(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent preferences check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box preferences(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent preferences check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box preferences(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent preferences check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box preferences(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent preferences check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box preferences(const control& parent);
      /// @brief Create a system-defined check_box that represent preferences check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box preferences(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent preferences check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box preferences(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent preferences check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box preferences(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent preferences check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box preferences(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent preferences check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box preferences(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent preferences check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box preferences(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent preferences check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box preferences(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent preferences check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box preferences(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent preferences check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box preferences(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent preferences check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box preferences(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent preferences check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box preferences(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent previous check_box.
      /// @return The created check_box.
      static check_box previous();
      /// @brief Create a system-defined check_box that represent previous check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box previous(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent previous check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box previous(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent previous check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box previous(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent previous check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box previous(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent previous check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box previous(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent previous check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box previous(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent previous check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box previous(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent previous check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box previous(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent previous check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box previous(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent previous check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box previous(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent previous check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box previous(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent previous check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box previous(const control& parent);
      /// @brief Create a system-defined check_box that represent previous check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box previous(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent previous check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box previous(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent previous check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box previous(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent previous check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box previous(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent previous check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box previous(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent previous check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box previous(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent previous check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box previous(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent previous check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box previous(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent previous check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box previous(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent previous check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box previous(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent previous check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box previous(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent print check_box.
      /// @return The created check_box.
      static check_box print();
      /// @brief Create a system-defined check_box that represent print check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box print(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent print check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box print(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent print check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box print(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent print check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box print(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent print check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box print(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent print check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box print(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent print check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box print(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent print check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box print(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent print check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box print(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent print check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box print(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent print check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box print(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent print check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box print(const control& parent);
      /// @brief Create a system-defined check_box that represent print check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box print(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent print check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box print(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent print check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box print(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent print check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box print(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent print check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box print(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent print check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box print(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent print check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box print(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent print check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box print(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent print check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box print(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent print check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box print(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent print check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box print(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent print_preview check_box.
      /// @return The created check_box.
      static check_box print_preview();
      /// @brief Create a system-defined check_box that represent print_preview check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box print_preview(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent print_preview check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box print_preview(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent print_preview check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box print_preview(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent print_preview check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box print_preview(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent print_preview check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box print_preview(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent print_preview check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box print_preview(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent print_preview check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box print_preview(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent print_preview check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box print_preview(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent print_preview check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box print_preview(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent print_preview check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box print_preview(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent print_preview check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box print_preview(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent print_preview check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box print_preview(const control& parent);
      /// @brief Create a system-defined check_box that represent print_preview check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box print_preview(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent print_preview check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box print_preview(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent print_preview check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box print_preview(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent print_preview check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box print_preview(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent print_preview check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box print_preview(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent print_preview check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box print_preview(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent print_preview check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box print_preview(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent print_preview check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box print_preview(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent print_preview check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box print_preview(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent print_preview check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box print_preview(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent print_preview check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box print_preview(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent properties check_box.
      /// @return The created check_box.
      static check_box properties();
      /// @brief Create a system-defined check_box that represent properties check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box properties(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent properties check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box properties(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent properties check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box properties(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent properties check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box properties(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent properties check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box properties(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent properties check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box properties(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent properties check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box properties(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent properties check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box properties(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent properties check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box properties(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent properties check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box properties(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent properties check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box properties(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent properties check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box properties(const control& parent);
      /// @brief Create a system-defined check_box that represent properties check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box properties(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent properties check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box properties(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent properties check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box properties(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent properties check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box properties(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent properties check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box properties(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent properties check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box properties(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent properties check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box properties(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent properties check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box properties(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent properties check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box properties(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent properties check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box properties(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent properties check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box properties(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent quit check_box.
      /// @return The created check_box.
      static check_box quit();
      /// @brief Create a system-defined check_box that represent quit check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box quit(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent quit check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box quit(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent quit check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box quit(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent quit check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box quit(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent quit check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box quit(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent quit check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box quit(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent quit check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box quit(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent quit check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box quit(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent quit check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box quit(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent quit check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box quit(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent quit check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box quit(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent quit check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box quit(const control& parent);
      /// @brief Create a system-defined check_box that represent quit check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box quit(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent quit check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box quit(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent quit check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box quit(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent quit check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box quit(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent quit check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box quit(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent quit check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box quit(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent quit check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box quit(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent quit check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box quit(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent quit check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box quit(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent quit check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box quit(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent quit check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box quit(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent redo check_box.
      /// @return The created check_box.
      static check_box redo();
      /// @brief Create a system-defined check_box that represent redo check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box redo(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent redo check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box redo(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent redo check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box redo(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent redo check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box redo(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent redo check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box redo(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent redo check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box redo(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent redo check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box redo(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent redo check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box redo(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent redo check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box redo(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent redo check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box redo(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent redo check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box redo(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent redo check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box redo(const control& parent);
      /// @brief Create a system-defined check_box that represent redo check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box redo(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent redo check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box redo(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent redo check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box redo(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent redo check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box redo(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent redo check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box redo(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent redo check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box redo(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent redo check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box redo(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent redo check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box redo(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent redo check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box redo(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent redo check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box redo(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent redo check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box redo(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent refresh check_box.
      /// @return The created check_box.
      static check_box refresh();
      /// @brief Create a system-defined check_box that represent refresh check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box refresh(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent refresh check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box refresh(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent refresh check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box refresh(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent refresh check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box refresh(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent refresh check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box refresh(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent refresh check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box refresh(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent refresh check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box refresh(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent refresh check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box refresh(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent refresh check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box refresh(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent refresh check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box refresh(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent refresh check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box refresh(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent refresh check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box refresh(const control& parent);
      /// @brief Create a system-defined check_box that represent refresh check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box refresh(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent refresh check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box refresh(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent refresh check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box refresh(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent refresh check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box refresh(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent refresh check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box refresh(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent refresh check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box refresh(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent refresh check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box refresh(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent refresh check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box refresh(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent refresh check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box refresh(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent refresh check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box refresh(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent refresh check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box refresh(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent remove check_box.
      /// @return The created check_box.
      static check_box remove();
      /// @brief Create a system-defined check_box that represent remove check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box remove(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent remove check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box remove(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent remove check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box remove(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent remove check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box remove(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent remove check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box remove(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent remove check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box remove(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent remove check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box remove(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent remove check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box remove(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent remove check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box remove(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent remove check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box remove(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent remove check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box remove(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent remove check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box remove(const control& parent);
      /// @brief Create a system-defined check_box that represent remove check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box remove(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent remove check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box remove(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent remove check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box remove(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent remove check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box remove(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent remove check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box remove(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent remove check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box remove(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent remove check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box remove(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent remove check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box remove(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent remove check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box remove(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent remove check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box remove(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent remove check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box remove(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent replace check_box.
      /// @return The created check_box.
      static check_box replace();
      /// @brief Create a system-defined check_box that represent replace check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box replace(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent replace check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box replace(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent replace check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box replace(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent replace check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box replace(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent replace check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box replace(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent replace check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box replace(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent replace check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box replace(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent replace check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box replace(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent replace check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box replace(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent replace check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box replace(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent replace check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box replace(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent replace check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box replace(const control& parent);
      /// @brief Create a system-defined check_box that represent replace check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box replace(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent replace check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box replace(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent replace check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box replace(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent replace check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box replace(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent replace check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box replace(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent replace check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box replace(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent replace check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box replace(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent replace check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box replace(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent replace check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box replace(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent replace check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box replace(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent replace check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box replace(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent retry check_box.
      /// @return The created check_box.
      static check_box retry();
      /// @brief Create a system-defined check_box that represent retry check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box retry(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent retry check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box retry(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent retry check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box retry(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent retry check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box retry(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent retry check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box retry(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent retry check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box retry(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent retry check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box retry(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent retry check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box retry(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent retry check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box retry(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent retry check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box retry(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent retry check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box retry(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent retry check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box retry(const control& parent);
      /// @brief Create a system-defined check_box that represent retry check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box retry(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent retry check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box retry(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent retry check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box retry(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent retry check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box retry(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent retry check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box retry(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent retry check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box retry(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent retry check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box retry(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent retry check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box retry(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent retry check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box retry(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent retry check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box retry(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent retry check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box retry(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent revert_to_saved check_box.
      /// @return The created check_box.
      static check_box revert_to_saved();
      /// @brief Create a system-defined check_box that represent revert_to_saved check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box revert_to_saved(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent revert_to_saved check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box revert_to_saved(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent revert_to_saved check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box revert_to_saved(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent revert_to_saved check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box revert_to_saved(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent revert_to_saved check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box revert_to_saved(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent revert_to_saved check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box revert_to_saved(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent revert_to_saved check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box revert_to_saved(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent revert_to_saved check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box revert_to_saved(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent revert_to_saved check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box revert_to_saved(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent revert_to_saved check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box revert_to_saved(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent revert_to_saved check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box revert_to_saved(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent revert_to_saved check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box revert_to_saved(const control& parent);
      /// @brief Create a system-defined check_box that represent revert_to_saved check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box revert_to_saved(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent revert_to_saved check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box revert_to_saved(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent revert_to_saved check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box revert_to_saved(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent revert_to_saved check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box revert_to_saved(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent revert_to_saved check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box revert_to_saved(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent revert_to_saved check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box revert_to_saved(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent revert_to_saved check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box revert_to_saved(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent revert_to_saved check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box revert_to_saved(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent revert_to_saved check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box revert_to_saved(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent revert_to_saved check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box revert_to_saved(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent revert_to_saved check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box revert_to_saved(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent save check_box.
      /// @return The created check_box.
      static check_box save();
      /// @brief Create a system-defined check_box that represent save check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box save(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent save check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box save(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent save check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box save(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent save check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box save(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent save check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box save(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent save check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box save(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent save check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box save(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent save check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box save(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent save check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box save(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent save check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box save(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent save check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box save(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent save check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box save(const control& parent);
      /// @brief Create a system-defined check_box that represent save check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box save(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent save check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box save(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent save check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box save(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent save check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box save(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent save check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box save(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent save check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box save(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent save check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box save(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent save check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box save(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent save check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box save(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent save check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box save(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent save check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box save(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent save_as check_box.
      /// @return The created check_box.
      static check_box save_as();
      /// @brief Create a system-defined check_box that represent save_as check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box save_as(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent save_as check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box save_as(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent save_as check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box save_as(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent save_as check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box save_as(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent save_as check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box save_as(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent save_as check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box save_as(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent save_as check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box save_as(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent save_as check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box save_as(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent save_as check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box save_as(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent save_as check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box save_as(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent save_as check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box save_as(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent save_as check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box save_as(const control& parent);
      /// @brief Create a system-defined check_box that represent save_as check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box save_as(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent save_as check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box save_as(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent save_as check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box save_as(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent save_as check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box save_as(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent save_as check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box save_as(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent save_as check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box save_as(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent save_as check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box save_as(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent save_as check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box save_as(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent save_as check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box save_as(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent save_as check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box save_as(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent save_as check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box save_as(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent search check_box.
      /// @return The created check_box.
      static check_box search();
      /// @brief Create a system-defined check_box that represent search check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box search(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent search check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box search(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent search check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box search(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent search check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box search(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent search check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box search(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent search check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box search(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent search check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box search(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent search check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box search(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent search check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box search(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent search check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box search(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent search check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box search(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent search check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box search(const control& parent);
      /// @brief Create a system-defined check_box that represent search check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box search(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent search check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box search(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent search check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box search(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent search check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box search(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent search check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box search(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent search check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box search(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent search check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box search(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent search check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box search(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent search check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box search(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent search check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box search(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent search check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box search(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent select_all check_box.
      /// @return The created check_box.
      static check_box select_all();
      /// @brief Create a system-defined check_box that represent select_all check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box select_all(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent select_all check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box select_all(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent select_all check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box select_all(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent select_all check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box select_all(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent select_all check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box select_all(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent select_all check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box select_all(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent select_all check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box select_all(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent select_all check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box select_all(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent select_all check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box select_all(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent select_all check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box select_all(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent select_all check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box select_all(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent select_all check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box select_all(const control& parent);
      /// @brief Create a system-defined check_box that represent select_all check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box select_all(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent select_all check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box select_all(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent select_all check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box select_all(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent select_all check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box select_all(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent select_all check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box select_all(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent select_all check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box select_all(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent select_all check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box select_all(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent select_all check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box select_all(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent select_all check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box select_all(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent select_all check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box select_all(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent select_all check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box select_all(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent settings check_box.
      /// @return The created check_box.
      static check_box settings();
      /// @brief Create a system-defined check_box that represent settings check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box settings(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent settings check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box settings(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent settings check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box settings(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent settings check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box settings(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent settings check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box settings(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent settings check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box settings(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent settings check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box settings(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent settings check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box settings(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent settings check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box settings(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent settings check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box settings(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent settings check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box settings(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent settings check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box settings(const control& parent);
      /// @brief Create a system-defined check_box that represent settings check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box settings(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent settings check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box settings(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent settings check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box settings(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent settings check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box settings(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent settings check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box settings(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent settings check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box settings(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent settings check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box settings(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent settings check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box settings(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent settings check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box settings(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent settings check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box settings(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent settings check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box settings(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent spell_check check_box.
      /// @return The created check_box.
      static check_box spell_check();
      /// @brief Create a system-defined check_box that represent spell_check check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box spell_check(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent spell_check check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box spell_check(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent spell_check check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box spell_check(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent spell_check check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box spell_check(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent spell_check check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box spell_check(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent spell_check check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box spell_check(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent spell_check check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box spell_check(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent spell_check check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box spell_check(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent spell_check check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box spell_check(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent spell_check check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box spell_check(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent spell_check check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box spell_check(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent spell_check check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box spell_check(const control& parent);
      /// @brief Create a system-defined check_box that represent spell_check check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box spell_check(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent spell_check check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box spell_check(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent spell_check check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box spell_check(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent spell_check check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box spell_check(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent spell_check check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box spell_check(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent spell_check check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box spell_check(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent spell_check check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box spell_check(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent spell_check check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box spell_check(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent spell_check check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box spell_check(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent spell_check check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box spell_check(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent spell_check check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box spell_check(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent stop check_box.
      /// @return The created check_box.
      static check_box stop();
      /// @brief Create a system-defined check_box that represent stop check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box stop(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent stop check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box stop(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent stop check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box stop(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent stop check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box stop(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent stop check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box stop(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent stop check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box stop(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent stop check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box stop(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent stop check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box stop(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent stop check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box stop(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent stop check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box stop(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent stop check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box stop(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent stop check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box stop(const control& parent);
      /// @brief Create a system-defined check_box that represent stop check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box stop(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent stop check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box stop(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent stop check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box stop(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent stop check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box stop(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent stop check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box stop(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent stop check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box stop(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent stop check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box stop(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent stop check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box stop(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent stop check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box stop(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent stop check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box stop(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent stop check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box stop(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent strikeout check_box.
      /// @return The created check_box.
      static check_box strikeout();
      /// @brief Create a system-defined check_box that represent strikeout check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box strikeout(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent strikeout check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box strikeout(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent strikeout check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box strikeout(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent strikeout check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box strikeout(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent strikeout check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box strikeout(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent strikeout check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box strikeout(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent strikeout check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box strikeout(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent strikeout check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box strikeout(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent strikeout check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box strikeout(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent strikeout check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box strikeout(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent strikeout check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box strikeout(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent strikeout check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box strikeout(const control& parent);
      /// @brief Create a system-defined check_box that represent strikeout check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box strikeout(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent strikeout check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box strikeout(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent strikeout check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box strikeout(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent strikeout check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box strikeout(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent strikeout check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box strikeout(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent strikeout check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box strikeout(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent strikeout check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box strikeout(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent strikeout check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box strikeout(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent strikeout check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box strikeout(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent strikeout check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box strikeout(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent strikeout check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box strikeout(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent tools check_box.
      /// @return The created check_box.
      static check_box tools();
      /// @brief Create a system-defined check_box that represent tools check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box tools(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent tools check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box tools(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent tools check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box tools(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent tools check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box tools(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent tools check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box tools(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent tools check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box tools(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent tools check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box tools(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent tools check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box tools(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent tools check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box tools(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent tools check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box tools(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent tools check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box tools(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent tools check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box tools(const control& parent);
      /// @brief Create a system-defined check_box that represent tools check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box tools(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent tools check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box tools(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent tools check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box tools(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent tools check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box tools(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent tools check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box tools(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent tools check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box tools(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent tools check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box tools(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent tools check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box tools(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent tools check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box tools(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent tools check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box tools(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent tools check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box tools(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent top check_box.
      /// @return The created check_box.
      static check_box top();
      /// @brief Create a system-defined check_box that represent top check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box top(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent top check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box top(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent top check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box top(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent top check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box top(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent top check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box top(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent top check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box top(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent top check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box top(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent top check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box top(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent top check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box top(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent top check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box top(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent top check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box top(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent top check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box top(const control& parent);
      /// @brief Create a system-defined check_box that represent top check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box top(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent top check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box top(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent top check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box top(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent top check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box top(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent top check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box top(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent top check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box top(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent top check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box top(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent top check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box top(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent top check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box top(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent top check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box top(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent top check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box top(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent undelete check_box.
      /// @return The created check_box.
      static check_box undelete();
      /// @brief Create a system-defined check_box that represent undelete check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box undelete(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent undelete check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box undelete(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent undelete check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box undelete(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent undelete check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box undelete(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent undelete check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box undelete(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent undelete check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box undelete(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent undelete check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box undelete(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent undelete check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box undelete(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent undelete check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box undelete(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent undelete check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box undelete(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent undelete check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box undelete(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent undelete check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box undelete(const control& parent);
      /// @brief Create a system-defined check_box that represent undelete check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box undelete(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent undelete check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box undelete(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent undelete check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box undelete(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent undelete check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box undelete(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent undelete check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box undelete(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent undelete check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box undelete(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent undelete check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box undelete(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent undelete check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box undelete(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent undelete check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box undelete(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent undelete check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box undelete(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent undelete check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box undelete(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent underline check_box.
      /// @return The created check_box.
      static check_box underline();
      /// @brief Create a system-defined check_box that represent underline check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box underline(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent underline check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box underline(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent underline check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box underline(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent underline check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box underline(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent underline check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box underline(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent underline check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box underline(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent underline check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box underline(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent underline check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box underline(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent underline check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box underline(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent underline check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box underline(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent underline check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box underline(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent underline check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box underline(const control& parent);
      /// @brief Create a system-defined check_box that represent underline check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box underline(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent underline check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box underline(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent underline check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box underline(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent underline check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box underline(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent underline check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box underline(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent underline check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box underline(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent underline check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box underline(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent underline check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box underline(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent underline check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box underline(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent underline check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box underline(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent underline check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box underline(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent undo check_box.
      /// @return The created check_box.
      static check_box undo();
      /// @brief Create a system-defined check_box that represent undo check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box undo(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent undo check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box undo(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent undo check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box undo(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent undo check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box undo(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent undo check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box undo(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent undo check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box undo(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent undo check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box undo(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent undo check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box undo(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent undo check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box undo(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent undo check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box undo(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent undo check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box undo(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent undo check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box undo(const control& parent);
      /// @brief Create a system-defined check_box that represent undo check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box undo(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent undo check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box undo(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent undo check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box undo(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent undo check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box undo(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent undo check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box undo(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent undo check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box undo(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent undo check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box undo(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent undo check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box undo(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent undo check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box undo(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent undo check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box undo(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent undo check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box undo(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent unindent check_box.
      /// @return The created check_box.
      static check_box unindent();
      /// @brief Create a system-defined check_box that represent unindent check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box unindent(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent unindent check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box unindent(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent unindent check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box unindent(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent unindent check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box unindent(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent unindent check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box unindent(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent unindent check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box unindent(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent unindent check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box unindent(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent unindent check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box unindent(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent unindent check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box unindent(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent unindent check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box unindent(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent unindent check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box unindent(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent unindent check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box unindent(const control& parent);
      /// @brief Create a system-defined check_box that represent unindent check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box unindent(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent unindent check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box unindent(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent unindent check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box unindent(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent unindent check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box unindent(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent unindent check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box unindent(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent unindent check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box unindent(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent unindent check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box unindent(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent unindent check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box unindent(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent unindent check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box unindent(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent unindent check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box unindent(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent unindent check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box unindent(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent up check_box.
      /// @return The created check_box.
      static check_box up();
      /// @brief Create a system-defined check_box that represent up check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box up(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent up check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box up(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent up check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box up(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent up check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box up(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent up check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box up(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent up check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box up(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent up check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box up(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent up check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box up(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent up check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box up(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent up check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box up(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent up check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box up(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent up check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box up(const control& parent);
      /// @brief Create a system-defined check_box that represent up check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box up(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent up check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box up(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent up check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box up(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent up check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box up(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent up check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box up(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent up check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box up(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent up check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box up(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent up check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box up(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent up check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box up(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent up check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box up(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent up check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box up(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent view check_box.
      /// @return The created check_box.
      static check_box view();
      /// @brief Create a system-defined check_box that represent view check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box view(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent view check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box view(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent view check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box view(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent view check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box view(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent view check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box view(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent view check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box view(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent view check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box view(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent view check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box view(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent view check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box view(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent view check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box view(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent view check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box view(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent view check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box view(const control& parent);
      /// @brief Create a system-defined check_box that represent view check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box view(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent view check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box view(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent view check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box view(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent view check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box view(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent view check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box view(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent view check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box view(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent view check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box view(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent view check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box view(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent view check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box view(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent view check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box view(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent view check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box view(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent window check_box.
      /// @return The created check_box.
      static check_box window();
      /// @brief Create a system-defined check_box that represent window check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box window(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent window check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box window(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent window check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box window(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent window check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box window(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent window check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box window(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent window check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box window(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent window check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box window(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent window check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box window(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent window check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box window(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent window check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box window(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent window check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box window(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent window check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box window(const control& parent);
      /// @brief Create a system-defined check_box that represent window check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box window(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent window check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box window(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent window check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box window(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent window check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box window(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent window check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box window(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent window check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box window(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent window check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box window(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent window check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box window(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent window check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box window(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent window check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box window(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent window check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box window(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent yes check_box.
      /// @return The created check_box.
      static check_box yes();
      /// @brief Create a system-defined check_box that represent yes check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box yes(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent yes check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box yes(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent yes check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box yes(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent yes check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box yes(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent yes check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box yes(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent yes check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box yes(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent yes check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box yes(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent yes check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box yes(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent yes check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box yes(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent yes check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box yes(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent yes check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box yes(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent yes check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box yes(const control& parent);
      /// @brief Create a system-defined check_box that represent yes check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box yes(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent yes check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box yes(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent yes check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box yes(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent yes check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box yes(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent yes check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box yes(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent yes check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box yes(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent yes check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box yes(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent yes check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box yes(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent yes check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box yes(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent yes check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box yes(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent yes check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box yes(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent zoom_in check_box.
      /// @return The created check_box.
      static check_box zoom_in();
      /// @brief Create a system-defined check_box that represent zoom_in check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box zoom_in(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent zoom_in check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box zoom_in(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent zoom_in check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box zoom_in(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent zoom_in check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box zoom_in(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent zoom_in check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box zoom_in(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent zoom_in check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box zoom_in(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent zoom_in check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box zoom_in(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent zoom_in check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box zoom_in(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent zoom_in check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box zoom_in(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent zoom_in check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box zoom_in(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent zoom_in check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box zoom_in(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent zoom_in check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box zoom_in(const control& parent);
      /// @brief Create a system-defined check_box that represent zoom_in check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box zoom_in(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent zoom_in check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box zoom_in(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent zoom_in check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box zoom_in(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent zoom_in check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box zoom_in(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent zoom_in check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box zoom_in(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent zoom_in check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box zoom_in(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent zoom_in check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box zoom_in(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent zoom_in check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box zoom_in(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent zoom_in check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box zoom_in(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent zoom_in check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box zoom_in(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent zoom_in check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box zoom_in(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent zoom_out check_box.
      /// @return The created check_box.
      static check_box zoom_out();
      /// @brief Create a system-defined check_box that represent zoom_out check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box zoom_out(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent zoom_out check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box zoom_out(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent zoom_out check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box zoom_out(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent zoom_out check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box zoom_out(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent zoom_out check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box zoom_out(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent zoom_out check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box zoom_out(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent zoom_out check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box zoom_out(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent zoom_out check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box zoom_out(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent zoom_out check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box zoom_out(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent zoom_out check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box zoom_out(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent zoom_out check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box zoom_out(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent zoom_out check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box zoom_out(const control& parent);
      /// @brief Create a system-defined check_box that represent zoom_out check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box zoom_out(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent zoom_out check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box zoom_out(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent zoom_out check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box zoom_out(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent zoom_out check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box zoom_out(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent zoom_out check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box zoom_out(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent zoom_out check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box zoom_out(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent zoom_out check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box zoom_out(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent zoom_out check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box zoom_out(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent zoom_out check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box zoom_out(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent zoom_out check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box zoom_out(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent zoom_out check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box zoom_out(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);

      /// @brief Create a system-defined check_box that represent zoom_to_fit check_box.
      /// @return The created check_box.
      static check_box zoom_to_fit();
      /// @brief Create a system-defined check_box that represent zoom_to_fit check_box with specified location.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box zoom_to_fit(const drawing::point& location);
      /// @brief Create a system-defined check_box that represent zoom_to_fit check_box with specified location, and size.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box zoom_to_fit(const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent zoom_to_fit check_box with specified location, size, and name.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box zoom_to_fit(const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent zoom_to_fit check_box with specified and check_state.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box zoom_to_fit(xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent zoom_to_fit check_box with specified check_state, and location.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box zoom_to_fit(xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent zoom_to_fit check_box with specified check_state, location, and size.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box zoom_to_fit(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent zoom_to_fit check_box with specified check_state, location, size, and name.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box zoom_to_fit(xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent zoom_to_fit check_box with specified three_state, and check_state.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box zoom_to_fit(bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent zoom_to_fit check_box with specified three_state, check_state, and location.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box zoom_to_fit(bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent zoom_to_fit check_box with specified three_state, check_state, location, and size.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box zoom_to_fit(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent zoom_to_fit check_box with specified three_state, check_state, location, size, and name.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box zoom_to_fit(bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent zoom_to_fit check_box with specified parent.
      /// @param parent The control that contains the check_box.
      /// @return The created check_box.
      static check_box zoom_to_fit(const control& parent);
      /// @brief Create a system-defined check_box that represent zoom_to_fit check_box with specified parent, and location.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box zoom_to_fit(const control& parent, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent zoom_to_fit check_box with specified parent,  location, and size.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box zoom_to_fit(const control& parent, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent zoom_to_fit check_box with specified parent, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box zoom_to_fit(const control& parent, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent zoom_to_fit check_box with specified parent, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box zoom_to_fit(const control& parent, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent zoom_to_fit check_box with specified parent, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box zoom_to_fit(const control& parent, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent zoom_to_fit check_box with specified parent, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box zoom_to_fit(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent zoom_to_fit check_box with specified parent, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box zoom_to_fit(const control& parent, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @brief Create a system-defined check_box that represent zoom_to_fit check_box with specified parent, three_state, and check_state.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @return The created check_box.
      static check_box zoom_to_fit(const control& parent, bool three_state, xtd::forms::check_state check_state);
      /// @brief Create a system-defined check_box that represent zoom_to_fit check_box with specified parent, three_state, check_state, and location.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @return The created check_box.
      static check_box zoom_to_fit(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location);
      /// @brief Create a system-defined check_box that represent zoom_to_fit check_box with specified parent, three_state, check_state, location, and size.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @return The created check_box.
      static check_box zoom_to_fit(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size);
      /// @brief Create a system-defined check_box that represent zoom_to_fit check_box with specified parent, three_state, check_state, location, size, and name.
      /// @param parent The control that contains the check_box.
      /// @param three_state true if the check_box is able to display three check states; otherwise, false.
      /// @param check_state One of the xtd::forms::check_state enumeration values.
      /// @param location The check_box location in pixels.
      /// @param size The check_box size in pixels.
      /// @param name The name of the check_box.
      /// @return The created check_box.
      static check_box zoom_to_fit(const control& parent, bool three_state, xtd::forms::check_state check_state, const drawing::point& location, const drawing::size& size, const xtd::string& name);
      /// @}
    };
  }
}
