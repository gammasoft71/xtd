#pragma region xtd generated code
// This code was generated by CMake script.
//
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.

#pragma once
#include <xtd/configuration/settings>

namespace minesweeper::properties {
  /// @brief A strongly typed settings class, for storing user and system settings
  /// @details This class was auto-generated by CMake script. To add or remove a member, edit your CMakeList.txt or properties/settings.cmake file then rerun cmake tools.
  /// @remarks See [Settings](https://gammasoft71.github.io/xtd/docs/documentation/Guides/xtd.core/settings) for more informations.
  class settings : public xtd::object {
  public:
    /// @name Public Constructors

    /// @{
    /// @brief Initializes a new instance of the minesweeper::properties::settings class.
    /// @remarks All properties are reloaded with the last saved value.
    settings() noexcept : settings {true} {}
    /// @brief Initializes a new instance of the minesweeper::properties::settings class.
    /// @param load If `true` all properties are reloaded with the last saved values; otherwise none.
    explicit settings(bool load) noexcept {
      if (load) reload();
    }
    /// @}

    /// @cond
    settings(settings&&) noexcept = default;
    settings(const settings&) noexcept = default;
    settings& operator =(const settings&) noexcept = default;
    /// @endcond

    /// @name Public Properties

    /// @{
    /// @brief Gets the original_color user setting property.
    /// @return A bool value.
    bool original_color() const noexcept {return original_color_;}
    /// @brief Sets the original_color user setting property.
    /// @param value A bool value.
    settings& original_color(bool value) noexcept {
      original_color_ = value;
      return *this;
    }

    /// @brief Gets the marks user setting property.
    /// @return A bool value.
    bool marks() const noexcept {return marks_;}
    /// @brief Sets the marks user setting property.
    /// @param value A bool value.
    settings& marks(bool value) noexcept {
      marks_ = value;
      return *this;
    }

    /// @brief Gets the level user setting property.
    /// @return A minesweeper::level value.
    minesweeper::level level() const noexcept {return level_;}
    /// @brief Sets the level user setting property.
    /// @param value A minesweeper::level value.
    settings& level(minesweeper::level value) noexcept {
      level_ = value;
      return *this;
    }

    /// @brief Gets the beginner_high_scores_value user setting property.
    /// @return A int value.
    int beginner_high_scores_value() const noexcept {return beginner_high_scores_value_;}
    /// @brief Sets the beginner_high_scores_value user setting property.
    /// @param value A int value.
    settings& beginner_high_scores_value(int value) noexcept {
      beginner_high_scores_value_ = value;
      return *this;
    }

    /// @brief Gets the beginner_high_scores_name user setting property.
    /// @return A xtd::string value.
    xtd::string beginner_high_scores_name() const noexcept {return beginner_high_scores_name_;}
    /// @brief Sets the beginner_high_scores_name user setting property.
    /// @param value A xtd::string value.
    settings& beginner_high_scores_name(xtd::string value) noexcept {
      beginner_high_scores_name_ = value;
      return *this;
    }

    /// @brief Gets the intermediate_high_scores_value user setting property.
    /// @return A int value.
    int intermediate_high_scores_value() const noexcept {return intermediate_high_scores_value_;}
    /// @brief Sets the intermediate_high_scores_value user setting property.
    /// @param value A int value.
    settings& intermediate_high_scores_value(int value) noexcept {
      intermediate_high_scores_value_ = value;
      return *this;
    }

    /// @brief Gets the intermediate_high_scores_name user setting property.
    /// @return A xtd::string value.
    xtd::string intermediate_high_scores_name() const noexcept {return intermediate_high_scores_name_;}
    /// @brief Sets the intermediate_high_scores_name user setting property.
    /// @param value A xtd::string value.
    settings& intermediate_high_scores_name(xtd::string value) noexcept {
      intermediate_high_scores_name_ = value;
      return *this;
    }

    /// @brief Gets the expert_high_scores_value user setting property.
    /// @return A int value.
    int expert_high_scores_value() const noexcept {return expert_high_scores_value_;}
    /// @brief Sets the expert_high_scores_value user setting property.
    /// @param value A int value.
    settings& expert_high_scores_value(int value) noexcept {
      expert_high_scores_value_ = value;
      return *this;
    }

    /// @brief Gets the expert_high_scores_name user setting property.
    /// @return A xtd::string value.
    xtd::string expert_high_scores_name() const noexcept {return expert_high_scores_name_;}
    /// @brief Sets the expert_high_scores_name user setting property.
    /// @param value A xtd::string value.
    settings& expert_high_scores_name(xtd::string value) noexcept {
      expert_high_scores_name_ = value;
      return *this;
    }

    /// @brief Gets the custom_height user setting property.
    /// @return A int value.
    int custom_height() const noexcept {return custom_height_;}
    /// @brief Sets the custom_height user setting property.
    /// @param value A int value.
    settings& custom_height(int value) noexcept {
      custom_height_ = value;
      return *this;
    }

    /// @brief Gets the custom_width user setting property.
    /// @return A int value.
    int custom_width() const noexcept {return custom_width_;}
    /// @brief Sets the custom_width user setting property.
    /// @param value A int value.
    settings& custom_width(int value) noexcept {
      custom_width_ = value;
      return *this;
    }

    /// @brief Gets the custom_mines user setting property.
    /// @return A int value.
    int custom_mines() const noexcept {return custom_mines_;}
    /// @brief Sets the custom_mines user setting property.
    /// @param value A int value.
    settings& custom_mines(int value) noexcept {
      custom_mines_ = value;
      return *this;
    }

    /// @}

    /// @name Public Methods

    /// @{
    /// @brief Reload all properties with the last saved values.
    /// @remarks See [Settings](https://gammasoft71.github.io/xtd/docs/documentation/Guides/xtd.core/settings) for more informations.
    void reload() noexcept {
      original_color_ = settings_.read("original_color", original_color_);
      marks_ = settings_.read("marks", marks_);
      level_ = settings_.read("level", level_);
      beginner_high_scores_value_ = settings_.read("beginner_high_scores_value", beginner_high_scores_value_);
      beginner_high_scores_name_ = settings_.read("beginner_high_scores_name", beginner_high_scores_name_);
      intermediate_high_scores_value_ = settings_.read("intermediate_high_scores_value", intermediate_high_scores_value_);
      intermediate_high_scores_name_ = settings_.read("intermediate_high_scores_name", intermediate_high_scores_name_);
      expert_high_scores_value_ = settings_.read("expert_high_scores_value", expert_high_scores_value_);
      expert_high_scores_name_ = settings_.read("expert_high_scores_name", expert_high_scores_name_);
      custom_height_ = settings_.read("custom_height", custom_height_);
      custom_width_ = settings_.read("custom_width", custom_width_);
      custom_mines_ = settings_.read("custom_mines", custom_mines_);
    }

    /// @brief Reset all properties to their default values.
    /// @remarks See [Settings](https://gammasoft71.github.io/xtd/docs/documentation/Guides/xtd.core/settings) for more informations.
    void reset() noexcept {
      settings_.reset();
      *this = settings {false};
    }

    /// @brief Save all properties.
    /// @remarks See [Settings](https://gammasoft71.github.io/xtd/docs/documentation/Guides/xtd.core/settings) for more informations.
    void save() noexcept {
      settings_.write("original_color", original_color_);
      settings_.write("marks", marks_);
      settings_.write("level", level_);
      settings_.write("beginner_high_scores_value", beginner_high_scores_value_);
      settings_.write("beginner_high_scores_name", beginner_high_scores_name_);
      settings_.write("intermediate_high_scores_value", intermediate_high_scores_value_);
      settings_.write("intermediate_high_scores_name", intermediate_high_scores_name_);
      settings_.write("expert_high_scores_value", expert_high_scores_value_);
      settings_.write("expert_high_scores_name", expert_high_scores_name_);
      settings_.write("custom_height", custom_height_);
      settings_.write("custom_width", custom_width_);
      settings_.write("custom_mines", custom_mines_);
      settings_.save();
    }
    /// @}

    /// @name Public Static Properties

    /// @{
    /// @brief Gets the default instance of settings.
    /// @return The default instance.
    /// @remarks At the first call all properties are reloaded with the last saved values.
    static settings& default_settings() noexcept {
      static auto default_settings = settings {};
      return default_settings;
    }
    /// @}

  private:
    xtd::configuration::settings settings_;
    bool original_color_ {false};
    bool marks_ {true};
    minesweeper::level level_ {minesweeper::level::beginner};
    int beginner_high_scores_value_ {999};
    xtd::string beginner_high_scores_name_ {xtd::translator::translate("Anonymous")};
    int intermediate_high_scores_value_ {999};
    xtd::string intermediate_high_scores_name_ {xtd::translator::translate("Anonymous")};
    int expert_high_scores_value_ {999};
    xtd::string expert_high_scores_name_ {xtd::translator::translate("Anonymous")};
    int custom_height_ {16};
    int custom_width_ {30};
    int custom_mines_ {99};
  };
}

#pragma endregion
